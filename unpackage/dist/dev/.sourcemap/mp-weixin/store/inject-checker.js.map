{"version":3,"file":"inject-checker.js","sources":["store/inject-checker.js"],"sourcesContent":["/**\n * 用于确保Vuex store被正确注入到Vue实例\n * 仅支持Vue 3\n */\nimport { getCurrentInstance, inject } from 'vue'\n\n/**\n * 检查store是否可用的方法\n * @param {Object} store - Vuex store实例\n * @returns {boolean} 返回store是否可用\n */\nexport const checkStoreAvailability = (store) => {\n  if (!store) {\n    console.error('store参数未提供');\n    return false;\n  }\n  \n  // 检查user模块是否注册\n  try {\n    const userState = store.state.user;\n    if (!userState) {\n      console.error('user模块不存在');\n      return false;\n    }\n    \n    // 检查baseInfo子模块\n    if (!userState.baseInfo) {\n      console.error('user/baseInfo模块不存在');\n      return false;\n    }\n    \n    console.log('Vuex store正常可用');\n    return true;\n  } catch (error) {\n    console.error('检查Vuex模块时出错:', error);\n    return false;\n  }\n};\n\n/**\n * 为组件注入$store安全访问方法的混入 (Vue 3版本)\n */\nexport const injectStoreSafety = {\n  beforeCreate() {\n    // 创建安全访问对象\n    this.$safeStore = createSafeStoreAccess();\n  }\n};\n\n/**\n * 创建安全访问store的方法\n * 仅支持Vue 3\n * @returns {Object} 安全访问方法对象\n */\nfunction createSafeStoreAccess() {\n  return {\n    // 安全获取state\n    state: (path) => {\n      try {\n        // 获取store (Vue 3方式)\n        const store = getStoreFromComponent();\n        if (!store) return null;\n        \n        const parts = path.split('.');\n        let current = store.state;\n        \n        for (const part of parts) {\n          if (!current || typeof current !== 'object') return null;\n          current = current[part];\n        }\n        \n        return current;\n      } catch (error) {\n        console.error(`安全获取state路径 ${path} 时出错:`, error);\n        return null;\n      }\n    },\n    \n    // 安全调用getter\n    getter: (name) => {\n      try {\n        const store = getStoreFromComponent();\n        return store && store.getters[name];\n      } catch (error) {\n        console.error(`安全获取getter ${name} 时出错:`, error);\n        return null;\n      }\n    },\n    \n    // 安全dispatch\n    dispatch: (type, payload) => {\n      try {\n        const store = getStoreFromComponent();\n        if (!store) {\n          console.warn(`store不可用，dispatch ${type} 被跳过`);\n          return Promise.resolve(null);\n        }\n        return store.dispatch(type, payload);\n      } catch (error) {\n        console.error(`安全调用dispatch ${type} 时出错:`, error);\n        return Promise.reject(error);\n      }\n    },\n    \n    // 安全commit\n    commit: (type, payload) => {\n      try {\n        const store = getStoreFromComponent();\n        if (!store) {\n          console.warn(`store不可用，commit ${type} 被跳过`);\n          return;\n        }\n        store.commit(type, payload);\n      } catch (error) {\n        console.error(`安全调用commit ${type} 时出错:`, error);\n      }\n    }\n  };\n}\n\n/**\n * 从组件实例获取store\n * 仅支持Vue 3\n * @returns {Object|null} Vuex store或null\n */\nfunction getStoreFromComponent() {\n  // Vue 3方式 - 使用getCurrentInstance或inject\n  const instance = getCurrentInstance();\n  \n  // 尝试从当前实例获取\n  if (instance && instance.proxy && instance.proxy.$store) {\n    return instance.proxy.$store;\n  }\n  \n  // 尝试使用inject获取\n  try {\n    const storeFromInject = inject('store', null);\n    if (storeFromInject) {\n      return storeFromInject;\n    }\n  } catch (e) {\n    // inject可能不在setup上下文中被调用\n    console.debug('注入store失败:', e);\n  }\n  \n  // 尝试从app实例中获取\n  try {\n    const app = getApp();\n    if (app && app.$vm && app.$vm.$store) {\n      return app.$vm.$store;\n    }\n  } catch (e) {\n    console.warn('无法从app获取store:', e);\n  }\n  \n  // 尝试从uni全局对象获取\n  if (typeof uni !== 'undefined' && uni.$store) {\n    return uni.$store;\n  }\n  \n  // 所有方法都失败\n  console.warn('无法获取store实例');\n  return null;\n} "],"names":["uni","getCurrentInstance","inject"],"mappings":"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"}