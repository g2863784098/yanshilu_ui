{"version":3,"file":"service_newbuilt.js","sources":["pagesMine/service/service_newbuilt.vue","pagesMine/service/service_newbuilt.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"page-container\">\n    <!-- 状态栏占位 -->\n    <view class=\"status-bar\"></view>\n    \n    <!-- 导航栏 -->\n    <Header :title=\"mode === 'edit' ? '修改信息' : '新建服务'\" class=\"header-container\" @back=\"goBack\" />\n    \n    <!-- 表单区域 -->\n    <view class=\"form-container\">\n      <!-- 基本信息区块 -->\n      <view class=\"form-section-wrapper\">\n        <view class=\"form-section\">\n          <view class=\"section-title\">基本信息</view>\n          \n          <!-- 服务名称 -->\n          <view class=\"form-item horizontal-item\">\n            <view class=\"form-label-horizontal\">\n              <view>服务名称</view>\n            </view>\n            <input \n              class=\"form-input-horizontal\" \n              type=\"text\" \n              placeholder=\"请输入服务名称\" \n              v-model=\"serviceNameModel\"\n            />\n          </view>\n          \n          <!-- 服务类型 -->\n          <view class=\"form-item horizontal-item\">\n            <view class=\"form-label-horizontal\">服务类型</view>\n            <view class=\"select-container\">\n              <choice-selected\n                :choiceIndex=\"selectedServiceTypeIndex\"\n                :choiceList=\"serviceTypes\"\n                :defaultText=\"'请选择服务类型'\"\n                @onChoiceClick=\"handleServiceTypeSelect\"\n              ></choice-selected>\n            </view>\n          </view>\n          \n          <!-- 课程时长 -->\n          <view class=\"form-item horizontal-item\">\n            <view class=\"form-label-horizontal\">课程时长</view>\n            <view class=\"time-wrapper\">\n              <view class=\"time-selector\">\n                <choice-selected\n                  :choiceIndex=\"selectedServiceType === '一对多课程' ? selectedMultiHoursIndex : selectedHoursIndex\"\n                  :choiceList=\"hourOptions\"\n                  :defaultText=\"'小时'\"\n                  @onChoiceClick=\"(index) => selectedServiceType === '一对多课程' ? handleMultiHoursSelect(index) : handleHoursSelect(index)\"\n                ></choice-selected>\n              </view>\n              <view class=\"time-selector\">\n                <choice-selected\n                  :choiceIndex=\"selectedServiceType === '一对多课程' ? selectedMultiMinutesIndex : selectedMinutesIndex\"\n                  :choiceList=\"minuteOptions\"\n                  :defaultText=\"'分钟'\"\n                  @onChoiceClick=\"(index) => selectedServiceType === '一对多课程' ? handleMultiMinutesSelect(index) : handleMinutesSelect(index)\"\n                ></choice-selected>\n              </view>\n            </view>\n          </view>\n          \n          <!-- 课程人数 (一对多课程) -->\n          <view class=\"form-item horizontal-item\" v-if=\"selectedServiceType === '一对多课程'\">\n            <view class=\"form-label-horizontal\">课程人数</view>\n            <view class=\"select-container\">\n              <choice-selected\n                :choiceIndex=\"selectedPersonCountIndex\"\n                :choiceList=\"personCountOptions\"\n                :defaultText=\"'请选择课程人数'\"\n                @onChoiceClick=\"handlePersonCountSelect\"\n              ></choice-selected>\n            </view>\n          </view>\n          \n          <!-- 服务价格 -->\n          <view class=\"form-item horizontal-item\">\n            <view class=\"form-label-horizontal\">\n              <view>服务价格</view>\n              <view class=\"price-hint\">每小时价格/h</view>\n            </view>\n            <input \n              class=\"form-input-horizontal price-input\" \n              type=\"text\" \n              placeholder=\"如200元/h\" \n              v-model=\"price\"\n              @input=\"trackChanges\"\n            />\n          </view>\n        </view>\n      </view>\n      \n      <!-- 具体内容区块 -->\n      <view class=\"form-section-wrapper\">\n        <view class=\"form-section\">\n          <view class=\"section-title\">具体内容</view>\n          \n          <!-- 服务介绍 -->\n          <view class=\"form-item\">\n            <view class=\"form-label-small\">服务介绍 <text class=\"max-count\">(限200字)</text></view>\n            <textarea \n              class=\"form-textarea\" \n              placeholder=\"请输入服务介绍\" \n              v-model=\"description\"\n              @input=\"trackChanges\"\n            />\n          </view>\n          \n          <!-- 封面上传 -->\n          <view class=\"form-item\">\n            <view class=\"form-label-small\">上传封面</view>\n            <view class=\"upload-item\">\n              <view class=\"upload-btn\" @click=\"chooseCover\">\n                <text class=\"plus-icon\">+</text>\n              </view>\n            </view>\n          </view>\n          \n          <!-- 附件上传 -->\n          <view class=\"form-item\" v-if=\"showAttachment\">\n            <view class=\"form-label-small\">上传附件</view>\n            <view class=\"upload-item\">\n              <view class=\"upload-btn\" @click=\"chooseFile\">\n                <text class=\"plus-icon\">+</text>\n              </view>\n            </view>\n          </view>\n          \n          <!-- 已上传封面预览 -->\n          <view class=\"cover-grid\" v-if=\"coverUrls.length > 0\">\n            <template v-for=\"(url, index) in coverUrls\" :key=\"index\">\n              <view class=\"cover-item\">\n                <image :src=\"url\" class=\"cover-image\" mode=\"aspectFill\"></image>\n                <view class=\"delete-icon\" @click.stop=\"deleteCover(index)\">×</view>\n              </view>\n            </template>\n          </view>\n        </view>\n      </view>\n    </view>\n    \n    <!-- 底部按钮 -->\n    <view class=\"bottom-btn-area\">\n      <view class=\"confirm-btn\" @click=\"submitForm\">确定</view>\n    </view>\n    \n  </view>\n</template>\n\n<script lang=\"uts\">\n// 使用绝对路径\nimport ChoiceSelected from '/pagesMine/components/combobox/combobox.vue'\nimport Header from '@/components/navigationTitleBar/header'\nimport { Navigator } from '@/router/Router.js'\n\nexport default {\n  components: {\n    'choice-selected': ChoiceSelected,\n    Header\n  },\n  data() {\n    return {\n      hasEdited: false, // 用于跟踪表单是否被编辑过\n      mode: 'add', // 默认为添加模式\n      serviceId: '', // 当前编辑的服务ID\n      coverUrls: [], // 修改：封面图片URL数组\n      avatarUrl: '', // 新增：头像URL\n      selectedServiceType: '',\n      selectedServiceTypeIndex: -1,\n      serviceTypes: [\n        '一对一课程',\n       '一对多课程',\n       '学习资料'\n      ],\n      coursequantity: '',\n      showServiceTypeDropdown: false,\n      duration: '',\n      description: '',\n      price: '',\n      files: [],\n      showDuration: false,\n      showAttachment: false,\n      originalService: null, // 保存原始服务数据\n      \n      // 一对一课程相关数据\n      serviceName: '',\n      selectedHoursIndex: -1,\n      hourOptions: ['1', '2', '4', '6', '8', '10', '12', '24', '48', '60', '120'],\n      selectedMinutesIndex: -1,\n      minuteOptions: ['0', '15', '30', '45'],\n      \n      // 一对多课程相关数据\n      selectedMultiHoursIndex: -1,\n      selectedMultiMinutesIndex: -1,\n      multiServiceName: '',\n      selectedPersonCountIndex: -1,\n      personCountOptions: ['2', '4', '6', '8', '10', '15', '20', '30'],\n\n      // 状态栏高度\n      statusBarHeight: 0\n    }\n  },\n  onLoad(options) {\n    uni.__f__('log','at pagesMine/service/service_newbuilt.vue:206','===============================')\n    uni.__f__('log','at pagesMine/service/service_newbuilt.vue:207','service_newbuilt onLoad:', options)\n    \n    // 设置状态栏高度\n    this.setStatusBarHeight()\n    \n    // 设置模式和服务ID\n    if (options && options.mode) {\n      this.mode = options.mode\n      uni.__f__('log','at pagesMine/service/service_newbuilt.vue:215','当前模式:', this.mode)\n      \n      if (options.mode === 'edit' && options.id) {\n        // 编辑模式：获取服务ID\n        this.serviceId = options.id\n        uni.__f__('log','at pagesMine/service/service_newbuilt.vue:220','编辑服务ID:', this.serviceId)\n        \n        // 检查全局状态中是否有编辑服务数据\n        if (getApp().globalData && getApp().globalData.editingService) {\n          uni.__f__('log','at pagesMine/service/service_newbuilt.vue:224','全局状态中存在编辑服务数据:', getApp().globalData.editingService)\n        } else {\n          uni.__f__('log','at pagesMine/service/service_newbuilt.vue:226','全局状态中不存在编辑服务数据')\n        }\n        \n        // 加载待编辑的服务数据\n        this.loadEditingService()\n      }\n    } else {\n      uni.__f__('log','at pagesMine/service/service_newbuilt.vue:233','未检测到模式参数，默认为新建模式')\n      this.mode = 'add'\n    }\n    \n    // 初始化表单字段显示\n    this.updateFormFields()\n    uni.__f__('log','at pagesMine/service/service_newbuilt.vue:239','===============================')\n  },\n  onUnload() {\n    // 移除事件监听\n    uni.$off('serviceEdited', this.handleServiceEdited)\n    \n    // 清理全局状态中的编辑服务\n    if (getApp().globalData) {\n      getApp().globalData.editingService = null\n    }\n  },\n  methods: {\n    // 设置状态栏高度\n    setStatusBarHeight() {\n      // 获取系统信息\n      const systemInfo = uni.getSystemInfoSync()\n      // 设置状态栏高度（rpx单位）\n      this.statusBarHeight = systemInfo.statusBarHeight\n      \n      // 设置CSS变量\n      // 只在document存在的环境中执行DOM操作\n      if (typeof document !== 'undefined' && document.documentElement) {\n        document.documentElement.style.setProperty('--status-bar-height', `${this.statusBarHeight}px`)\n      }\n    },\n    chooseAvatar() {\n      uni.chooseImage({\n        count: 1,\n        sizeType: ['compressed'],\n        sourceType: ['album', 'camera'],\n        success: (res) => {\n          this.avatarUrl = res.tempFilePaths[0]\n        }\n      })\n    },\n    chooseCover() {\n      const remainCount = 9 - this.coverUrls.length\n      if (remainCount <= 0) {\n        uni.showToast({\n          title: '最多只能上传9张图片',\n          icon: 'none'\n        })\n        return\n      }\n      \n      uni.chooseImage({\n        count: remainCount,\n        sizeType: ['compressed'],\n        sourceType: ['album', 'camera'],\n        success: (res) => {\n          this.coverUrls = [...this.coverUrls, ...res.tempFilePaths]\n          this.hasEdited = true\n        }\n      })\n    },\n    deleteCover(index) {\n      this.coverUrls.splice(index, 1)\n      this.hasEdited = true\n    },\n    loadEditingService() {\n      try {\n        uni.__f__('log','at pagesMine/service/service_newbuilt.vue:300','开始加载编辑服务数据...')\n        uni.__f__('log','at pagesMine/service/service_newbuilt.vue:301','服务ID:', this.serviceId)\n        \n        // 首先尝试从全局数据获取\n        if (getApp().globalData && getApp().globalData.editingService) {\n          const editingService = getApp().globalData.editingService\n          uni.__f__('log','at pagesMine/service/service_newbuilt.vue:306','从全局数据获取到编辑服务:', editingService)\n          \n          // 检查ID是否匹配\n          if (editingService.id.toString() === this.serviceId.toString()) {\n            uni.__f__('log','at pagesMine/service/service_newbuilt.vue:310','ID匹配，使用全局数据')\n            this.originalService = editingService\n            \n            // 使用服务数据填充表单\n            this.fillFormWithServiceData(this.originalService)\n            uni.__f__('log','at pagesMine/service/service_newbuilt.vue:315','表单填充完成')\n            return\n          } else {\n            uni.__f__('warn','at pagesMine/service/service_newbuilt.vue:318','全局数据中的服务ID不匹配')\n          }\n        } else {\n          uni.__f__('log','at pagesMine/service/service_newbuilt.vue:321','全局数据中不存在编辑服务数据')\n        }\n        \n        // 如果全局数据不存在或ID不匹配，尝试从本地存储加载\n        const servicesStr = uni.getStorageSync('services')\n        if (servicesStr) {\n          const services = JSON.parse(servicesStr)\n          uni.__f__('log','at pagesMine/service/service_newbuilt.vue:328','从本地存储获取到服务列表，共', services.length, '条记录')\n          \n          const service = services.find(s => s.id.toString() === this.serviceId.toString())\n          \n          if (service) {\n            uni.__f__('log','at pagesMine/service/service_newbuilt.vue:333','在本地存储中找到匹配的服务:', service)\n            this.originalService = service\n            \n            // 使用服务数据填充表单\n            this.fillFormWithServiceData(service)\n            uni.__f__('log','at pagesMine/service/service_newbuilt.vue:338','表单填充完成')\n          } else {\n            uni.__f__('error','at pagesMine/service/service_newbuilt.vue:340','在本地存储中找不到匹配的服务')\n            uni.showToast({\n              title: '找不到服务数据',\n              icon: 'none'\n            })\n            \n            // 延迟返回上一页\n            setTimeout(() => {\n              uni.navigateBack()\n            }, 1500)\n          }\n        } else {\n          uni.__f__('error','at pagesMine/service/service_newbuilt.vue:352','本地存储中不存在服务数据')\n          uni.showToast({\n            title: '找不到服务数据',\n            icon: 'none'\n          })\n          \n          // 延迟返回上一页\n          setTimeout(() => {\n            uni.navigateBack()\n          }, 1500)\n        }\n      } catch (error) {\n        uni.__f__('error','at pagesMine/service/service_newbuilt.vue:364','加载服务数据失败:', error)\n        uni.showToast({\n          title: '加载数据失败',\n          icon: 'none'\n        })\n      }\n    },\n    fillFormWithServiceData(serviceData) {\n      // 设置封面图片\n      this.coverUrls = serviceData.imageUrls || (serviceData.imageUrl ? [serviceData.imageUrl] : [])\n      \n      // 设置服务类型 (注意：需要修正设置服务类型的方式)\n      if (serviceData.type && serviceData.type.typename) {\n        // 如果服务数据使用type对象\n        this.selectedServiceType = serviceData.type.typename\n        this.selectedServiceTypeIndex = this.serviceTypes.findIndex(type => type === serviceData.type.typename)\n      } else {\n        // 如果服务数据直接使用name字段\n        this.selectedServiceType = serviceData.name || ''\n        this.selectedServiceTypeIndex = this.serviceTypes.findIndex(type => type === serviceData.name)\n      }\n      \n      // 设置价格（去掉价格前面的¥符号）\n      this.price = serviceData.price ? serviceData.price.replace(/[¥￥]/g, '') : ''\n      \n      // 设置描述\n      this.description = serviceData.description || ''\n      \n      // 根据服务类型设置不同的字段\n      if (this.selectedServiceType === '一对一课程') {\n        // 设置服务名称 (优先使用serviceName字段，如果没有则使用name)\n        this.serviceName = serviceData.serviceName || serviceData.name || ''\n        \n        // 解析总时长的小时和分钟\n        if (serviceData.totalDuration) {\n          const match = serviceData.totalDuration.match(/(\\d+)小时(\\d+)分钟/)\n          if (match) {\n            this.selectedHoursIndex = this.hourOptions.findIndex(h => h === match[1])\n            this.selectedMinutesIndex = this.minuteOptions.findIndex(m => m === match[2])\n          }\n        } else if (serviceData.type && serviceData.type.fulllength) {\n          // 从type.fulllength获取时长信息\n          const hours = serviceData.type.fulllength.hours || ''\n          const minutes = serviceData.type.fulllength.minutes || ''\n          \n          const hoursMatch = hours.match(/(\\d+)/)\n          const minutesMatch = minutes.match(/(\\d+)/)\n          \n          if (hoursMatch) {\n            this.selectedHoursIndex = this.hourOptions.findIndex(h => h === hoursMatch[1])\n          }\n          \n          if (minutesMatch) {\n            this.selectedMinutesIndex = this.minuteOptions.findIndex(m => m === minutesMatch[1])\n          }\n        }\n      } else if (this.selectedServiceType === '一对多课程') {\n        // 设置服务名称\n        this.multiServiceName = serviceData.serviceName || serviceData.name || ''\n        \n        // 解析总时长的小时和分钟\n        if (serviceData.totalDuration) {\n          const match = serviceData.totalDuration.match(/(\\d+)小时(\\d+)分钟/)\n          if (match) {\n            this.selectedMultiHoursIndex = this.hourOptions.findIndex(h => h === match[1])\n            this.selectedMultiMinutesIndex = this.minuteOptions.findIndex(m => m === match[2])\n          }\n        } else if (serviceData.type && serviceData.type.fulllength) {\n          // 从type.fulllength获取时长信息\n          const hours = serviceData.type.fulllength.hours || ''\n          const minutes = serviceData.type.fulllength.minutes || ''\n          \n          const hoursMatch = hours.match(/(\\d+)/)\n          const minutesMatch = minutes.match(/(\\d+)/)\n          \n          if (hoursMatch) {\n            this.selectedMultiHoursIndex = this.hourOptions.findIndex(h => h === hoursMatch[1])\n          }\n          \n          if (minutesMatch) {\n            this.selectedMultiMinutesIndex = this.minuteOptions.findIndex(m => m === minutesMatch[1])\n          }\n        }\n        \n        // 设置课程人数\n        if (serviceData.personCount) {\n          this.selectedPersonCountIndex = this.personCountOptions.findIndex(p => p === serviceData.personCount.toString())\n        } else if (serviceData.type && serviceData.type.studentnum) {\n          this.selectedPersonCountIndex = this.personCountOptions.findIndex(p => parseInt(p) === serviceData.type.studentnum)\n        }\n      } else if (this.selectedServiceType === '学习资料') {\n        // 学习资料类型\n        this.coursequantity = serviceData.coursequantity || serviceData.name || ''\n      }\n      \n      // 更新表单字段显示\n      this.updateFormFields()\n    },\n    goBack() {\n      // 如果表单被编辑过，显示提示弹窗\n      if (this.hasEdited) {\n        uni.showModal({\n          title: '提示',\n          content: '是否保存已编辑的内容？',\n          cancelText: '不保存',\n          confirmText: '保存',\n          success: (res) => {\n            if (res.confirm) {\n              // 用户选择保存\n              this.submitForm();\n            } else {\n              // 用户选择不保存，直接返回\n              Navigator.toService();\n            }\n          }\n        });\n      } else {\n        // 表单未编辑过，直接返回\n        Navigator.toService();\n      }\n    },\n    handleServiceTypeSelect(index) {\n      this.selectedServiceTypeIndex = index\n      this.selectedServiceType = this.serviceTypes[index]\n      \n      // 切换服务类型时，重置相关字段\n      if (this.selectedServiceType === '一对一课程') {\n        this.selectedHoursIndex = -1\n        this.selectedMinutesIndex = -1\n        this.serviceName = ''\n      } else if (this.selectedServiceType === '一对多课程') {\n        this.selectedMultiHoursIndex = -1\n        this.selectedMultiMinutesIndex = -1\n        this.multiServiceName = ''\n        this.selectedPersonCountIndex = -1\n      } else if (this.selectedServiceType === '学习资料') {\n        this.coursequantity = ''\n      }\n      \n      // 更新表单字段显示\n      this.updateFormFields()\n      this.hasEdited = true\n    },\n    handleHoursSelect(index) {\n      this.selectedHoursIndex = index\n      this.hasEdited = true\n    },\n    handleMinutesSelect(index) {\n      this.selectedMinutesIndex = index\n      this.hasEdited = true\n    },\n    handleMultiHoursSelect(index) {\n      this.selectedMultiHoursIndex = index\n      this.hasEdited = true\n    },\n    handleMultiMinutesSelect(index) {\n      this.selectedMultiMinutesIndex = index\n      this.hasEdited = true\n    },\n    handlePersonCountSelect(index) {\n      this.selectedPersonCountIndex = index\n      this.hasEdited = true\n    },\n    updateFormFields() {\n      // 根据服务类型显示或隐藏某些表单项\n      if (this.selectedServiceType === '学习资料') {\n        this.showDuration = false\n        this.showAttachment = true\n      } else {\n        this.showDuration = true\n        this.showAttachment = this.selectedServiceType === '学习资料'\n      }\n    },\n    chooseFile() {\n      uni.chooseImage({\n        count: 1,\n        success: (res) => {\n          this.files = res.tempFilePaths\n          this.hasEdited = true\n        }\n      })\n    },\n    submitForm() {\n      // 显示加载动画\n      uni.showLoading({\n        title: '提交中...'\n      })\n      \n      // 表单验证\n      if (this.coverUrls.length === 0) {\n        uni.showToast({\n          title: '请上传封面图片',\n          icon: 'none'\n        })\n        uni.hideLoading()\n        return\n      }\n      \n      if (!this.selectedServiceType) {\n        uni.showToast({\n          title: '请选择服务类型',\n          icon: 'none'\n        })\n        uni.hideLoading()\n        return\n      }\n      \n      // 一对一课程的特殊验证\n      if (this.selectedServiceType === '一对一课程') {\n        if (this.selectedHoursIndex === -1 || this.selectedMinutesIndex === -1) {\n          uni.showToast({\n            title: '请选择课程时长',\n            icon: 'none'\n          })\n          uni.hideLoading()\n          return\n        }\n        \n        if (!this.serviceName) {\n          uni.showToast({\n            title: '请填写服务名称',\n            icon: 'none'\n          })\n          uni.hideLoading()\n          return\n        }\n      } \n      // 一对多课程的特殊验证\n      else if (this.selectedServiceType === '一对多课程') {\n        if (this.selectedMultiHoursIndex === -1 || this.selectedMultiMinutesIndex === -1) {\n          uni.showToast({\n            title: '请选择课程时长',\n            icon: 'none'\n          })\n          uni.hideLoading()\n          return\n        }\n        \n        if (!this.multiServiceName) {\n          uni.showToast({\n            title: '请填写服务名称',\n            icon: 'none'\n          })\n          uni.hideLoading()\n          return\n        }\n        \n        if (this.selectedPersonCountIndex === -1) {\n          uni.showToast({\n            title: '请选择课程人数',\n            icon: 'none'\n          })\n          uni.hideLoading()\n          return\n        }\n      } \n      // 学习资料类型验证\n      else if (this.selectedServiceType === '学习资料') {\n        if (!this.coursequantity) {\n          uni.showToast({\n            title: '请填写服务名称',\n            icon: 'none'\n          })\n          uni.hideLoading()\n          return\n        }\n      }\n      \n      if (!this.price) {\n        uni.showToast({\n          title: '请填写服务价格',\n          icon: 'none'\n        })\n        uni.hideLoading()\n        return\n      }\n      \n      // 构建服务对象\n      let serviceData = {}\n      \n      // 编辑模式下保留原始服务的部分信息\n      if (this.mode === 'edit' && this.originalService) {\n        // 保留原始ID和部分不变的属性\n        serviceData = {\n          ...this.originalService,\n          // 这些字段将被覆盖\n          name: this.selectedServiceType,\n          price: this.price.startsWith('¥') ? this.price : '¥' + this.price,\n          description: this.description || `这是一个${this.selectedServiceType}服务`,\n          imageUrls: this.coverUrls,\n          imageUrl: this.coverUrls[0] || ''\n        }\n      } else {\n        // 新建模式\n        serviceData = {\n          id: Date.now().toString(), // 生成新ID\n          name: this.selectedServiceType,\n          price: this.price.startsWith('¥') ? this.price : '¥' + this.price,\n          description: this.description || `这是一个${this.selectedServiceType}服务`,\n          checked: false,\n          imageUrls: this.coverUrls,\n          imageUrl: this.coverUrls[0] || '',\n          createTime: new Date().toISOString().split('T')[0],\n          updateTime: new Date().toISOString().split('T')[0],\n          status: 'active'\n        }\n      }\n      \n      // 为一对一课程添加特殊字段\n      if (this.selectedServiceType === '一对一课程') {\n        serviceData.serviceName = this.serviceName\n        serviceData.totalDuration = `${this.hourOptions[this.selectedHoursIndex]}小时${this.minuteOptions[this.selectedMinutesIndex]}分钟`\n        \n        // 添加类型信息\n        serviceData.type = {\n          typename: '一对一课程',\n          fulllength: {\n            hours: `${this.hourOptions[this.selectedHoursIndex]}小时`,\n            minutes: `${this.minuteOptions[this.selectedMinutesIndex]}分钟`\n          }\n        }\n      } \n      // 为一对多课程添加特殊字段\n      else if (this.selectedServiceType === '一对多课程') {\n        serviceData.serviceName = this.multiServiceName\n        serviceData.totalDuration = `${this.hourOptions[this.selectedMultiHoursIndex]}小时${this.minuteOptions[this.selectedMultiMinutesIndex]}分钟`\n        serviceData.personCount = this.personCountOptions[this.selectedPersonCountIndex]\n        \n        // 添加类型信息\n        serviceData.type = {\n          typename: '一对多课程',\n          fulllength: {\n            hours: `${this.hourOptions[this.selectedMultiHoursIndex]}小时`,\n            minutes: `${this.minuteOptions[this.selectedMultiMinutesIndex]}分钟`\n          },\n          studentnum: parseInt(this.personCountOptions[this.selectedPersonCountIndex])\n        }\n      } \n      // 其他服务类型\n      else if (this.selectedServiceType === '学习资料') {\n        serviceData.coursequantity = this.coursequantity\n        serviceData.serviceName = this.coursequantity // 使用输入的名称作为serviceName\n        \n        // 添加类型信息\n        serviceData.type = {\n          typename: '学习资料',\n          fileLink: 'https://www.baidu.com' // 示例链接，实际应该由用户上传文件后获取\n        }\n      }\n      \n      // 更新时间戳\n      serviceData.updateTime = new Date().toISOString().split('T')[0]\n      \n      // 根据模式执行不同操作\n      if (this.mode === 'edit') {\n        this.updateExistingService(serviceData)\n      } else {\n        this.addNewService(serviceData)\n      }\n    },\n    addNewService(newService) {\n      // 将新服务数据存储到全局状态或本地存储中\n      try {\n        // 获取之前的服务列表（如果存在）\n        const servicesStr = uni.getStorageSync('services')\n        let services = []\n        \n        if (servicesStr) {\n          services = JSON.parse(servicesStr)\n        }\n        \n        // 检查服务是否已存在\n        const existingIndex = services.findIndex(s => s.id === newService.id)\n        if (existingIndex !== -1) {\n          // 如果已存在，则更新\n          services[existingIndex] = newService\n        } else {\n          // 添加新服务到列表中\n          services.push(newService)\n        }\n        \n        // 保存更新后的列表\n        uni.setStorageSync('services', JSON.stringify(services))\n        \n        // 设置上一页需要刷新的标志\n        getApp().globalData = getApp().globalData || {}\n        getApp().globalData.newServiceAdded = true\n        getApp().globalData.newService = newService\n        \n        uni.hideLoading()\n        \n        uni.showToast({\n          title: '提交成功',\n          icon: 'success'\n        })\n        \n        // 重置编辑状态\n        this.hasEdited = false\n        \n        // 延时返回上一页\n        setTimeout(() => {\n          // 使用Navigator进行导航\n          Navigator.toService();\n        }, 1500)\n      } catch (e) {\n        uni.__f__('error','at pagesMine/service/service_newbuilt.vue:769','保存服务失败', e)\n        uni.hideLoading()\n        uni.showToast({\n          title: '保存失败，请重试',\n          icon: 'none'\n        })\n      }\n    },\n    updateExistingService(updatedService) {\n      try {\n        // 获取服务列表\n        const servicesStr = uni.getStorageSync('services')\n        let services = []\n        \n        if (servicesStr) {\n          services = JSON.parse(servicesStr)\n        }\n        \n        // 查找并更新对应的服务\n        const index = services.findIndex(s => s.id == this.serviceId)\n        \n        if (index !== -1) {\n          services[index] = updatedService\n        } else {\n          // 如果找不到，则添加为新服务\n          services.push(updatedService)\n        }\n        \n        // 保存更新后的列表\n        uni.setStorageSync('services', JSON.stringify(services))\n        \n        // 设置编辑标志\n        getApp().globalData = getApp().globalData || {}\n        getApp().globalData.serviceEdited = true\n        getApp().globalData.editedService = updatedService\n        \n        uni.hideLoading()\n        \n        uni.showToast({\n          title: '更新成功',\n          icon: 'success'\n        })\n        \n        // 重置编辑状态\n        this.hasEdited = false\n        \n        // 延时返回上一页\n        setTimeout(() => {\n          // 使用Navigator进行导航\n          Navigator.toService();\n        }, 1500)\n      } catch (e) {\n        uni.__f__('error','at pagesMine/service/service_newbuilt.vue:821','更新服务失败', e)\n        uni.hideLoading()\n        uni.showToast({\n          title: '更新失败，请重试',\n          icon: 'none'\n        })\n      }\n    },\n    handleServiceEdited(service) {\n      uni.__f__('log','at pagesMine/service/service_newbuilt.vue:830','Service edited', service)\n    },\n    trackChanges() {\n      this.hasEdited = true\n    }\n  },\n  computed: {\n    serviceNameModel: {\n      get() {\n        return this.selectedServiceType === '一对多课程' ? this.multiServiceName : this.serviceName;\n      },\n      set(value) {\n        if (this.selectedServiceType === '一对多课程') {\n          this.multiServiceName = value;\n        } else {\n          this.serviceName = value;\n        }\n        this.trackChanges();\n      }\n    }\n  }\n}\n</script>\n\n<style>\n.status-bar {\n  width: 100%;\n  height: var(--status-bar-height);\n  background-color: #fff;\n}\n\n.header-container {\n  width: 100%;\n  height: 60rpx; /* 减少高度，使导航栏更贴近顶部 */\n  display: flex;\n  align-items: center;\n  position: relative;\n  background-color: #fff;\n  z-index: 100;\n  margin-bottom: 10rpx; /* 减少底部间距 */\n}\n\n/* 整体页面容器 */\n.page-container {\n  background: #fff;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n}\n\n/* 表单容器 */\n.form-container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 20rpx;\n  padding: 20rpx;\n  background-color: #fff;\n}\n\n/* 表单区块包装器 */\n.form-section-wrapper {\n  position: relative;\n  margin-bottom: 20rpx;\n  border-radius: 16rpx;\n  padding: 1px; /* 为边框留出空间 */\n  background: linear-gradient(to bottom, #E9EAFF, #b096f7); /* 边框渐变色 */\n}\n\n/* 表单区块 */\n.form-section {\n  background: linear-gradient(to bottom,#fff 5%,#E9EAFF 60%, #cfb1f7 ); /* 使用上下渐变背景 */\n  border-radius: 16rpx;\n  padding: 30rpx;\n  margin: 0; /* 移除底部外边距，由wrapper控制 */\n}\n\n/* 区块标题 */\n.section-title {\n  font-size: 30rpx;\n  color: #9A63FF;\n  margin-bottom: 30rpx;\n}\n\n/* 一行布局容器 */\n.row-container {\n  display: flex;\n  flex-direction: row;\n  gap: 20rpx;\n  margin-bottom: 30rpx;\n  width: 100%;\n}\n\n/* 特殊对齐的两行 */\n.form-item1 {\n  display: flex;\n  flex-direction: column;\n  width: 48%;\n}\n\n/* 标准表单项保持垂直布局 */\n.form-item {\n  display: flex;  \n  flex-direction: column;\n  position: relative;\n  margin-bottom: 25rpx;\n  width: 100%;\n}\n\n/* 表单标签 */\n.form-label {\n  font-size: 30rpx;\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 16rpx;\n}\n\n/* 最大字数提示 */\n.max-count {\n  font-size: 22rpx;\n  color: #999;\n  font-weight: normal;\n}\n\n/* 必填项标记 */\n.required::after {\n  content: '*';\n  color: #ff4d4f;\n  position: absolute;\n  top: 2rpx;\n  right: -20rpx;\n  font-size: 28rpx;\n}\n\n/* 表单输入框 */\n.form-input, .form-select{\n  height: 70rpx;\n  background-color: #fff;\n  border-radius: 10rpx;\n  padding: 0 20rpx;\n  font-size: 24rpx;\n  color: #333;\n  border: 2rpx solid #979797;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n/* 价格输入框 */\n.price-input {\n  position: relative;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n/* 表单文本域 */\n.form-textarea {\n  height: 200rpx;\n  background-color: #fff;\n  border-radius: 10rpx;\n  padding: 20rpx;\n  font-size: 24rpx;\n  color: #333;\n  border: 2rpx solid #979797;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n/* 错误提示样式 */\n.error-message {\n  color: #ff4d4f;\n  font-size: 24rpx;\n  margin-top: 8rpx;\n}\n\n/* 错误状态的输入框 */\n.input-error {\n  border-color: #ff4d4f !important;\n}\n\n/* 表单选择器容器 */\n.combobox-container {\n  position: relative; \n  display: flex;\n  flex-direction: column;\n  width: 100%;\n}\n\n/* 上传项容器 */\n.upload-item {\n  margin-top: 10rpx;\n}\n\n/* 上传按钮 */\n.upload-btn {\n  width: 160rpx;\n  height: 160rpx;\n  background-color: #f9f9f9;\n  border-radius: 8rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2rpx solid #979797;\n}\n\n/* 上传图标 */\n.plus-icon {\n  font-size: 72rpx;\n  color: #ccc;\n  font-weight: 300;\n}\n\n/* 底部按钮区域 */\n.bottom-btn-area {\n  padding: 30rpx;\n  background-color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* 确认按钮 */\n.confirm-btn {\n  height: 70rpx;\n  width: 180rpx;\n  background:linear-gradient(to bottom,#A5A9F7,#464EF8 90%);\n  border-radius: 20rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  font-size: 32rpx;\n  font-weight: 100;\n}\n\n/* 封面图片网格 */\n.cover-grid {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 0 -5rpx;\n}\n\n.cover-item {\n  width: calc(33.33% - 10rpx);\n  height: 215rpx;\n  margin: 0 5rpx 15rpx;\n  position: relative;\n  border-radius: 8rpx;\n  overflow: hidden;\n}\n\n.cover-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.delete-icon {\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 40rpx;\n  height: 40rpx;\n  background: rgba(0,0,0,0.5);\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n  border-bottom-left-radius: 8rpx;\n}\n\n/* 时间选择器包装容器 */\n.time-wrapper {\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  gap: 20rpx;\n}\n\n/* 单个时间选择器 */\n.time-selector {\n  flex: 1;\n  width: 0; /* 让flex:1生效 */\n}\n\n/* 水平排列的表单项 */\n.horizontal-item {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 25rpx;\n}\n\n/* 水平排列的标签 */\n.form-label-horizontal {\n  font-size: 24rpx;\n  font-weight: 500;\n  color: #333;\n  width: 150rpx;\n  text-align: left;\n}\n\n/* 水平排列的输入框 */\n.form-input-horizontal {\n  height: 70rpx;\n  background-color: #fff;\n  border-radius: 10rpx;\n  padding: 0 20rpx;\n  font-size: 24rpx;\n  color: #333;\n  border: 2rpx solid #979797;\n  flex: 1;\n  box-sizing: border-box;\n}\n\n/* 选择器容器 */\n.select-container {\n  flex: 1;\n}\n\n/* 价格提示文字 */\n.price-hint {\n  font-size: 20rpx;\n  color: #979797;\n  margin-top: 5rpx;\n}\n\n/* 具体内容区域的标签 */\n.form-label-small {\n  font-size: 24rpx;\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 16rpx;\n}\n\n/* 表单输入框占位符 */\n.form-input::placeholder, .form-textarea::placeholder {\n  font-size: 24rpx;\n  color: #979797;\n}\n\n/* 表单文本域 */\n.form-textarea {\n  height: 200rpx;\n  background-color: #fff;\n  border-radius: 10rpx;\n  padding: 20rpx;\n  font-size: 24rpx;\n  color: #333;\n  border: 2rpx solid #979797;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n/* 确保下拉框中的文字大小与输入框一致 */\n.choice-text {\n  font-size: 24rpx !important;\n}\n\n/* 确保所有下拉框中的文字大小统一 */\n::v-deep .choice-container,\n::v-deep .choice-text,\n::v-deep .choice-item {\n  font-size: 24rpx !important;\n}\n</style>\n","import MiniProgramPage from '/Users/ghw/Documents/waibao/yanshilu_ui/pagesMine/service/service_newbuilt.vue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","uni","Navigator"],"mappings":";;;AAyJA,MAAO,iBAAoB,MAAA;AAC3B,MAAO,SAAY,MAAA;AAGnB,MAAA,YAAeA,8BAAA;AAAA,EACb,YAAY;AAAA,IACV,mBAAmB;AAAA,IACnB;AAAA,EACD;AAAA,EACD,OAAI;AACF,WAAO;AAAA,MACL,WAAW;AAAA,MACX,MAAM;AAAA,MACN,WAAW;AAAA,MACX,WAAW,CAAE;AAAA,MACb,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,0BAA0B;AAAA,MAC1B,cAAc;AAAA,QACZ;AAAA,QACD;AAAA,QACA;AAAA,MACA;AAAA,MACD,gBAAgB;AAAA,MAChB,yBAAyB;AAAA,MACzB,UAAU;AAAA,MACV,aAAa;AAAA,MACb,OAAO;AAAA,MACP,OAAO,CAAE;AAAA,MACT,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,iBAAiB;AAAA;AAAA,MAGjB,aAAa;AAAA,MACb,oBAAoB;AAAA,MACpB,aAAa,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK;AAAA,MAC1E,sBAAsB;AAAA,MACtB,eAAe,CAAC,KAAK,MAAM,MAAM,IAAI;AAAA;AAAA,MAGrC,yBAAyB;AAAA,MACzB,2BAA2B;AAAA,MAC3B,kBAAkB;AAAA,MAClB,0BAA0B;AAAA,MAC1B,oBAAoB,CAAC,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,IAAI;AAAA;AAAA,MAG/D,iBAAiB;AAAA;EAEpB;AAAA,EACD,OAAO,SAAO;AACZC,kBAAAA,MAAI,MAAM,OAAM,iDAAgD,iCAAiC;AACjGA,kBAAG,MAAC,MAAM,OAAM,iDAAgD,4BAA4B,OAAO;AAGnG,SAAK,mBAAkB;AAGvB,QAAI,WAAW,QAAQ,MAAM;AAC3B,WAAK,OAAO,QAAQ;AACpBA,oBAAG,MAAC,MAAM,OAAM,iDAAgD,SAAS,KAAK,IAAI;AAElF,UAAI,QAAQ,SAAS,UAAU,QAAQ,IAAI;AAEzC,aAAK,YAAY,QAAQ;AACzBA,sBAAG,MAAC,MAAM,OAAM,iDAAgD,WAAW,KAAK,SAAS;AAGzF,YAAI,OAAQ,EAAC,cAAc,OAAM,EAAG,WAAW,gBAAgB;AAC7DA,8BAAI,MAAM,OAAM,iDAAgD,kBAAkB,OAAQ,EAAC,WAAW,cAAc;AAAA,QACpH,OAAK;AACLA,wBAAAA,MAAI,MAAM,OAAM,iDAAgD,gBAAgB;AAAA,QAClF;AAGA,aAAK,mBAAkB;AAAA,MACzB;AAAA,IACA,OAAK;AACLA,oBAAAA,MAAI,MAAM,OAAM,iDAAgD,kBAAkB;AAClF,WAAK,OAAO;AAAA,IACd;AAGA,SAAK,iBAAgB;AACrBA,kBAAAA,MAAI,MAAM,OAAM,iDAAgD,iCAAiC;AAAA,EAClG;AAAA,EACD,WAAQ;AAENA,kBAAAA,MAAI,KAAK,iBAAiB,KAAK,mBAAmB;AAGlD,QAAI,OAAQ,EAAC,YAAY;AACvB,eAAS,WAAW,iBAAiB;AAAA,IACvC;AAAA,EACD;AAAA,EACD,SAAS;AAAA;AAAA,IAEP,qBAAkB;AAEhB,YAAM,aAAaA,oBAAI;AAEvB,WAAK,kBAAkB,WAAW;AAIlC,UAAI,OAAO,aAAa,eAAe,SAAS,iBAAiB;AAC/D,iBAAS,gBAAgB,MAAM,YAAY,uBAAuB,GAAG,KAAK,eAAe,IAAI;AAAA,MAC/F;AAAA,IACD;AAAA,IACD,eAAY;AACVA,0BAAI,YAAY,IAAA,cAAA;AAAA,QACd,OAAO;AAAA,QACP,UAAU,CAAC,YAAY;AAAA,QACvB,YAAY,CAAC,SAAS,QAAQ;AAAA,QAC9B,SAAS,CAAC,QAAG;AACX,eAAK,YAAY,IAAI,cAAc,CAAC;AAAA,QACtC;AAAA,MACD,CAAA,CAAA;AAAA,IACF;AAAA,IACD,cAAW;AACT,YAAM,cAAc,IAAI,KAAK,UAAU;AACvC,UAAI,eAAe,GAAG;AACpBA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACP,CAAA;AACD,eAAK;AAAA,MACP;AAEAA,0BAAI,YAAY,IAAA,cAAA;AAAA,QACd,OAAO;AAAA,QACP,UAAU,CAAC,YAAY;AAAA,QACvB,YAAY,CAAC,SAAS,QAAQ;AAAA,QAC9B,SAAS,CAAC,QAAG;AACX,eAAK,YAAY,CAAC,GAAG,KAAK,WAAW,GAAG,IAAI,aAAa;AACzD,eAAK,YAAY;AAAA,QACnB;AAAA,MACD,CAAA,CAAA;AAAA,IACF;AAAA,IACD,YAAY,QAAK,MAAA;AACf,WAAK,UAAU,OAAO,OAAO,CAAC;AAC9B,WAAK,YAAY;AAAA,IAClB;AAAA,IACD,qBAAkB;AAChB,UAAI;AACFA,sBAAAA,MAAI,MAAM,OAAM,iDAAgD,eAAe;AAC/EA,sBAAG,MAAC,MAAM,OAAM,iDAAgD,SAAS,KAAK,SAAS;AAGvF,YAAI,OAAQ,EAAC,cAAc,OAAM,EAAG,WAAW,gBAAgB;AAC7D,gBAAM,iBAAiB,SAAS,WAAW;AAC3CA,wBAAG,MAAC,MAAM,OAAM,iDAAgD,iBAAiB,cAAc;AAG/F,cAAI,eAAe,GAAG,SAAQ,MAAO,KAAK,UAAU,YAAY;AAC9DA,0BAAAA,MAAI,MAAM,OAAM,iDAAgD,aAAa;AAC7E,iBAAK,kBAAkB;AAGvB,iBAAK,wBAAwB,KAAK,eAAe;AACjDA,0BAAAA,MAAI,MAAM,OAAM,iDAAgD,QAAQ;AACxE,mBAAK;AAAA,UACL,OAAK;AACLA,0BAAAA,MAAI,MAAM,QAAO,iDAAgD,eAAe;AAAA,UAClF;AAAA,QACA,OAAK;AACLA,wBAAAA,MAAI,MAAM,OAAM,iDAAgD,gBAAgB;AAAA,QAClF;AAGA,cAAM,cAAcA,cAAAA,MAAI,eAAe,UAAU;AACjD,YAAI,aAAa;AACf,gBAAM,WAAW,IAAA,KAAK,MAAM,WAAW;AACvCA,8BAAI,MAAM,OAAM,iDAAgD,kBAAkB,SAAS,QAAQ,KAAK;AAExG,gBAAM,UAAU,SAAS,KAAK,CAAA,IAAA,SAAK;AAAA,mBAAA,EAAE,GAAG,SAAS,MAAM,KAAK,UAAU,SAAQ;AAAA,UAAE,CAAA;AAEhF,cAAI,SAAS;AACXA,0BAAG,MAAC,MAAM,OAAM,iDAAgD,kBAAkB,OAAO;AACzF,iBAAK,kBAAkB;AAGvB,iBAAK,wBAAwB,OAAO;AACpCA,0BAAAA,MAAI,MAAM,OAAM,iDAAgD,QAAQ;AAAA,UACxE,OAAK;AACLA,0BAAAA,MAAI,MAAM,SAAQ,iDAAgD,gBAAgB;AAClFA,0BAAAA,MAAI,UAAU;AAAA,cACZ,OAAO;AAAA,cACP,MAAM;AAAA,YACP,CAAA;AAGD,uBAAW,MAAA;AACTA,4BAAG,MAAC,aAAY;AAAA,YACjB,GAAE,IAAI;AAAA,UACT;AAAA,QACA,OAAK;AACLA,wBAAAA,MAAI,MAAM,SAAQ,iDAAgD,cAAc;AAChFA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UACP,CAAA;AAGD,qBAAW,MAAA;AACTA,0BAAG,MAAC,aAAY;AAAA,UACjB,GAAE,IAAI;AAAA,QACT;AAAA,MACA,SAAO,OAAO;AACdA,sBAAG,MAAC,MAAM,SAAQ,iDAAgD,aAAa,KAAK;AACpFA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACP,CAAA;AAAA,MACH;AAAA,IACD;AAAA,IACD,wBAAwB,cAAW,MAAA;AAEjC,WAAK,YAAY,YAAY,cAAc,YAAY,WAAW,CAAC,YAAY,QAAQ,IAAI,CAAA;AAG3F,UAAI,YAAY,QAAQ,YAAY,KAAK,UAAU;AAEjD,aAAK,sBAAsB,YAAY,KAAK;AAC5C,aAAK,2BAA2B,KAAK,aAAa,UAAU,UAAK;AAAG,iBAAA,SAAS,YAAY,KAAK;AAAA,QAAQ,CAAA;AAAA,MACtG,OAAK;AAEL,aAAK,sBAAsB,YAAY,QAAQ;AAC/C,aAAK,2BAA2B,KAAK,aAAa,UAAU;AAAQ,iBAAA,SAAS,YAAY;AAAA,QAAI,CAAA;AAAA,MAC/F;AAGA,WAAK,QAAQ,YAAY,QAAQ,YAAY,MAAM,QAAQ,SAAS,EAAE,IAAI;AAG1E,WAAK,cAAc,YAAY,eAAe;AAG9C,UAAI,KAAK,wBAAwB,SAAS;AAExC,aAAK,cAAc,YAAY,eAAe,YAAY,QAAQ;AAGlE,YAAI,YAAY,eAAe;AAC7B,gBAAM,QAAQ,YAAY,cAAc,MAAM,gBAAgB;AAC9D,cAAI,OAAO;AACT,iBAAK,qBAAqB,KAAK,YAAY,UAAU;AAAK,qBAAA,MAAM,MAAM,CAAC;AAAA,YAAC,CAAA;AACxE,iBAAK,uBAAuB,KAAK,cAAc,UAAU;AAAK,qBAAA,MAAM,MAAM,CAAC;AAAA,YAAC,CAAA;AAAA,UAC9E;AAAA,QACA,WAAS,YAAY,QAAQ,YAAY,KAAK,YAAY;AAE1D,gBAAM,QAAQ,YAAY,KAAK,WAAW,SAAS;AACnD,gBAAM,UAAU,YAAY,KAAK,WAAW,WAAW;AAEvD,gBAAM,aAAa,MAAM,MAAM,OAAO;AACtC,gBAAM,eAAe,QAAQ,MAAM,OAAO;AAE1C,cAAI,YAAY;AACd,iBAAK,qBAAqB,KAAK,YAAY,UAAU;AAAK,qBAAA,MAAM,WAAW,CAAC;AAAA,YAAC,CAAA;AAAA,UAC/E;AAEA,cAAI,cAAc;AAChB,iBAAK,uBAAuB,KAAK,cAAc,UAAU;AAAK,qBAAA,MAAM,aAAa,CAAC;AAAA,YAAC,CAAA;AAAA,UACrF;AAAA,QACF;AAAA,MACF,WAAW,KAAK,wBAAwB,SAAS;AAE/C,aAAK,mBAAmB,YAAY,eAAe,YAAY,QAAQ;AAGvE,YAAI,YAAY,eAAe;AAC7B,gBAAM,QAAQ,YAAY,cAAc,MAAM,gBAAgB;AAC9D,cAAI,OAAO;AACT,iBAAK,0BAA0B,KAAK,YAAY,UAAU;AAAK,qBAAA,MAAM,MAAM,CAAC;AAAA,YAAC,CAAA;AAC7E,iBAAK,4BAA4B,KAAK,cAAc,UAAU;AAAK,qBAAA,MAAM,MAAM,CAAC;AAAA,YAAC,CAAA;AAAA,UACnF;AAAA,QACA,WAAS,YAAY,QAAQ,YAAY,KAAK,YAAY;AAE1D,gBAAM,QAAQ,YAAY,KAAK,WAAW,SAAS;AACnD,gBAAM,UAAU,YAAY,KAAK,WAAW,WAAW;AAEvD,gBAAM,aAAa,MAAM,MAAM,OAAO;AACtC,gBAAM,eAAe,QAAQ,MAAM,OAAO;AAE1C,cAAI,YAAY;AACd,iBAAK,0BAA0B,KAAK,YAAY,UAAU;AAAK,qBAAA,MAAM,WAAW,CAAC;AAAA,YAAC,CAAA;AAAA,UACpF;AAEA,cAAI,cAAc;AAChB,iBAAK,4BAA4B,KAAK,cAAc,UAAU;AAAK,qBAAA,MAAM,aAAa,CAAC;AAAA,YAAC,CAAA;AAAA,UAC1F;AAAA,QACF;AAGA,YAAI,YAAY,aAAa;AAC3B,eAAK,2BAA2B,KAAK,mBAAmB,UAAU,OAAA;AAAK,mBAAA,MAAM,YAAY,YAAY,SAAU;AAAA,UAAA,CAAA;AAAA,QAC/G,WAAS,YAAY,QAAQ,YAAY,KAAK,YAAY;AAC1D,eAAK,2BAA2B,KAAK,mBAAmB,UAAU,OAAK;AAAA,mBAAA,SAAS,CAAC,MAAM,YAAY,KAAK;AAAA,UAAU,CAAA;AAAA,QACpH;AAAA,MACF,WAAW,KAAK,wBAAwB,QAAQ;AAE9C,aAAK,iBAAiB,YAAY,kBAAkB,YAAY,QAAQ;AAAA,MAC1E;AAGA,WAAK,iBAAgB;AAAA,IACtB;AAAA,IACD,SAAM;AAEJ,UAAI,KAAK,WAAW;AAClBA,4BAAI,UAAU,IAAA,cAAA;AAAA,UACZ,OAAO;AAAA,UACP,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,aAAa;AAAA,UACb,SAAS,CAAC,QAAG;AACX,gBAAI,IAAI,SAAS;AAEf,mBAAK,WAAU;AAAA,YACf,OAAK;AAELC,4BAAS,UAAC,UAAS;AAAA,YACrB;AAAA,UACF;AAAA,QACD,CAAA,CAAA;AAAA,MACD,OAAK;AAELA,sBAAS,UAAC,UAAS;AAAA,MACrB;AAAA,IACD;AAAA,IACD,wBAAwB,QAAK,MAAA;AAC3B,WAAK,2BAA2B;AAChC,WAAK,sBAAsB,KAAK,aAAa,KAAK;AAGlD,UAAI,KAAK,wBAAwB,SAAS;AACxC,aAAK,qBAAqB;AAC1B,aAAK,uBAAuB;AAC5B,aAAK,cAAc;AAAA,MACrB,WAAW,KAAK,wBAAwB,SAAS;AAC/C,aAAK,0BAA0B;AAC/B,aAAK,4BAA4B;AACjC,aAAK,mBAAmB;AACxB,aAAK,2BAA2B;AAAA,MAClC,WAAW,KAAK,wBAAwB,QAAQ;AAC9C,aAAK,iBAAiB;AAAA,MACxB;AAGA,WAAK,iBAAgB;AACrB,WAAK,YAAY;AAAA,IAClB;AAAA,IACD,kBAAkB,QAAK,MAAA;AACrB,WAAK,qBAAqB;AAC1B,WAAK,YAAY;AAAA,IAClB;AAAA,IACD,oBAAoB,QAAK,MAAA;AACvB,WAAK,uBAAuB;AAC5B,WAAK,YAAY;AAAA,IAClB;AAAA,IACD,uBAAuB,QAAK,MAAA;AAC1B,WAAK,0BAA0B;AAC/B,WAAK,YAAY;AAAA,IAClB;AAAA,IACD,yBAAyB,QAAK,MAAA;AAC5B,WAAK,4BAA4B;AACjC,WAAK,YAAY;AAAA,IAClB;AAAA,IACD,wBAAwB,QAAK,MAAA;AAC3B,WAAK,2BAA2B;AAChC,WAAK,YAAY;AAAA,IAClB;AAAA,IACD,mBAAgB;AAEd,UAAI,KAAK,wBAAwB,QAAQ;AACvC,aAAK,eAAe;AACpB,aAAK,iBAAiB;AAAA,MACtB,OAAK;AACL,aAAK,eAAe;AACpB,aAAK,iBAAiB,KAAK,wBAAwB;AAAA,MACrD;AAAA,IACD;AAAA,IACD,aAAU;AACRD,0BAAI,YAAY,IAAA,cAAA;AAAA,QACd,OAAO;AAAA,QACP,SAAS,CAAC,QAAG;AACX,eAAK,QAAQ,IAAI;AACjB,eAAK,YAAY;AAAA,QACnB;AAAA,MACD,CAAA,CAAA;AAAA,IACF;AAAA,IACD,aAAU;AAERA,oBAAAA,MAAI,YAAY;AAAA,QACd,OAAO;AAAA,MACR,CAAA;AAGD,UAAI,KAAK,UAAU,WAAW,GAAG;AAC/BA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACP,CAAA;AACDA,sBAAG,MAAC,YAAW;AACf,eAAK;AAAA,MACP;AAEA,UAAI,CAAC,KAAK,qBAAqB;AAC7BA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACP,CAAA;AACDA,sBAAG,MAAC,YAAW;AACf,eAAK;AAAA,MACP;AAGA,UAAI,KAAK,wBAAwB,SAAS;AACxC,YAAI,KAAK,uBAAuB,MAAM,KAAK,yBAAyB,IAAI;AACtEA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UACP,CAAA;AACDA,wBAAG,MAAC,YAAW;AACf,iBAAK;AAAA,QACP;AAEA,YAAI,CAAC,KAAK,aAAa;AACrBA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UACP,CAAA;AACDA,wBAAG,MAAC,YAAW;AACf,iBAAK;AAAA,QACP;AAAA,MACF,WAES,KAAK,wBAAwB,SAAS;AAC7C,YAAI,KAAK,4BAA4B,MAAM,KAAK,8BAA8B,IAAI;AAChFA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UACP,CAAA;AACDA,wBAAG,MAAC,YAAW;AACf,iBAAK;AAAA,QACP;AAEA,YAAI,CAAC,KAAK,kBAAkB;AAC1BA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UACP,CAAA;AACDA,wBAAG,MAAC,YAAW;AACf,iBAAK;AAAA,QACP;AAEA,YAAI,KAAK,6BAA6B,IAAI;AACxCA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UACP,CAAA;AACDA,wBAAG,MAAC,YAAW;AACf,iBAAK;AAAA,QACP;AAAA,MACF,WAES,KAAK,wBAAwB,QAAQ;AAC5C,YAAI,CAAC,KAAK,gBAAgB;AACxBA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UACP,CAAA;AACDA,wBAAG,MAAC,YAAW;AACf,iBAAK;AAAA,QACP;AAAA,MACF;AAEA,UAAI,CAAC,KAAK,OAAO;AACfA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACP,CAAA;AACDA,sBAAG,MAAC,YAAW;AACf,eAAK;AAAA,MACP;AAGA,UAAI;QAAc,CAAC;AAAA;AAAA;AAGnB,UAAI,KAAK,SAAS,UAAU,KAAK,iBAAiB;AAEhD,sBAAU,IAAA,cAAA,OAAA,OAAA,OAAA,OAAA,CAAA,GACL,KAAK,eAAe,GAAA;AAAA;AAAA,UAEvB,MAAM,KAAK;AAAA,UACX,OAAO,KAAK,MAAM,WAAW,GAAG,IAAI,KAAK,QAAQ,MAAM,KAAK;AAAA,UAC5D,aAAa,KAAK,eAAe,OAAO,KAAK,mBAAmB;AAAA,UAChE,WAAW,KAAK;AAAA,UAChB,UAAU,KAAK,UAAU,CAAC,KAAK;AAAA,QAAC,CAAA,CAAA;AAAA,MAElC,OAAK;AAEL,sBAAc,IAAA,cAAA;AAAA,UACZ,IAAI,KAAK,IAAK,EAAC,SAAU;AAAA,UACzB,MAAM,KAAK;AAAA,UACX,OAAO,KAAK,MAAM,WAAW,GAAG,IAAI,KAAK,QAAQ,MAAM,KAAK;AAAA,UAC5D,aAAa,KAAK,eAAe,OAAO,KAAK,mBAAmB;AAAA,UAChE,SAAS;AAAA,UACT,WAAW,KAAK;AAAA,UAChB,UAAU,KAAK,UAAU,CAAC,KAAK;AAAA,UAC/B,aAAY,oBAAI,QAAO,YAAa,EAAC,MAAM,GAAG,EAAE,CAAC;AAAA,UACjD,aAAY,oBAAI,QAAO,YAAa,EAAC,MAAM,GAAG,EAAE,CAAC;AAAA,UACjD,QAAQ;AAAA,QACV,CAAA;AAAA,MACF;AAGA,UAAI,KAAK,wBAAwB,SAAS;AACxC,oBAAY,cAAc,KAAK;AAC/B,oBAAY,gBAAgB,GAAG,KAAK,YAAY,KAAK,kBAAkB,CAAC,KAAK,KAAK,cAAc,KAAK,oBAAoB,CAAC;AAG1H,oBAAY,OAAO,IAAA,cAAA;AAAA,UACjB,UAAU;AAAA,UACV,YAAY,IAAA,cAAA;AAAA,YACV,OAAO,GAAG,KAAK,YAAY,KAAK,kBAAkB,CAAC;AAAA,YACnD,SAAS,GAAG,KAAK,cAAc,KAAK,oBAAoB,CAAC;AAAA,WAC3D;AAAA,QACF,CAAA;AAAA,MACF,WAES,KAAK,wBAAwB,SAAS;AAC7C,oBAAY,cAAc,KAAK;AAC/B,oBAAY,gBAAgB,GAAG,KAAK,YAAY,KAAK,uBAAuB,CAAC,KAAK,KAAK,cAAc,KAAK,yBAAyB,CAAC;AACpI,oBAAY,cAAc,KAAK,mBAAmB,KAAK,wBAAwB;AAG/E,oBAAY,OAAO,IAAA,cAAA;AAAA,UACjB,UAAU;AAAA,UACV,YAAY,IAAA,cAAA;AAAA,YACV,OAAO,GAAG,KAAK,YAAY,KAAK,uBAAuB,CAAC;AAAA,YACxD,SAAS,GAAG,KAAK,cAAc,KAAK,yBAAyB,CAAC;AAAA,WAC/D;AAAA,UACD,YAAY,SAAS,KAAK,mBAAmB,KAAK,wBAAwB,CAAC;AAAA,QAC7E,CAAA;AAAA,MACF,WAES,KAAK,wBAAwB,QAAQ;AAC5C,oBAAY,iBAAiB,KAAK;AAClC,oBAAY,cAAc,KAAK;AAG/B,oBAAY,OAAO,IAAA,cAAA;AAAA,UACjB,UAAU;AAAA,UACV,UAAU;AAAA;AAAA,QACZ,CAAA;AAAA,MACF;AAGA,kBAAY,cAAa,oBAAI,QAAO,YAAa,EAAC,MAAM,GAAG,EAAE,CAAC;AAG9D,UAAI,KAAK,SAAS,QAAQ;AACxB,aAAK,sBAAsB,WAAW;AAAA,MACtC,OAAK;AACL,aAAK,cAAc,WAAW;AAAA,MAChC;AAAA,IACD;AAAA,IACD,cAAc,aAAU,MAAA;AAEtB,UAAI;AAEF,cAAM,cAAcA,cAAAA,MAAI,eAAe,UAAU;AACjD,YAAI,WAAW,CAAA;AAEf,YAAI,aAAa;AACf,qBAAW,IAAK,KAAA,MAAM,WAAW;AAAA,QACnC;AAGA,cAAM,gBAAgB,SAAS,UAAU,OAAK;AAAA,iBAAA,EAAE,OAAO,WAAW;AAAA,QAAE,CAAA;AACpE,YAAI,kBAAkB,IAAI;AAExB,mBAAS,aAAa,IAAI;AAAA,QAC1B,OAAK;AAEL,mBAAS,KAAK,UAAU;AAAA,QAC1B;AAGAA,sBAAG,MAAC,eAAe,YAAY,IAAK,KAAA,UAAU,QAAQ,CAAC;AAGvD,eAAM,EAAG,aAAa,OAAM,EAAG,cAAW,IAAA,cAAG,CAAA,CAAC;AAC9C,iBAAS,WAAW,kBAAkB;AACtC,iBAAS,WAAW,aAAa;AAEjCA,sBAAG,MAAC,YAAW;AAEfA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACP,CAAA;AAGD,aAAK,YAAY;AAGjB,mBAAW,MAAA;AAETC,wBAAS,UAAC,UAAS;AAAA,QACpB,GAAE,IAAI;AAAA,MACT,SAAS,GAAG;AACVD,sBAAG,MAAC,MAAM,SAAQ,iDAAgD,UAAU,CAAC;AAC7EA,sBAAG,MAAC,YAAW;AACfA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACP,CAAA;AAAA,MACH;AAAA,IACD;AAAA,IACD,sBAAsB,iBAAc,MAAA;AAClC,UAAI;AAEF,cAAM,cAAcA,cAAAA,MAAI,eAAe,UAAU;AACjD,YAAI,WAAW,CAAA;AAEf,YAAI,aAAa;AACf,qBAAW,IAAK,KAAA,MAAM,WAAW;AAAA,QACnC;AAGA,cAAM,QAAQ,SAAS,UAAU,OAAK;AAAA,iBAAA,EAAE,MAAM,KAAK;AAAA,QAAS,CAAA;AAE5D,YAAI,UAAU,IAAI;AAChB,mBAAS,KAAK,IAAI;AAAA,QAClB,OAAK;AAEL,mBAAS,KAAK,cAAc;AAAA,QAC9B;AAGAA,sBAAG,MAAC,eAAe,YAAY,IAAK,KAAA,UAAU,QAAQ,CAAC;AAGvD,eAAM,EAAG,aAAa,OAAM,EAAG,cAAW,IAAA,cAAG,CAAA,CAAC;AAC9C,iBAAS,WAAW,gBAAgB;AACpC,iBAAS,WAAW,gBAAgB;AAEpCA,sBAAG,MAAC,YAAW;AAEfA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACP,CAAA;AAGD,aAAK,YAAY;AAGjB,mBAAW,MAAA;AAETC,wBAAS,UAAC,UAAS;AAAA,QACpB,GAAE,IAAI;AAAA,MACT,SAAS,GAAG;AACVD,sBAAG,MAAC,MAAM,SAAQ,iDAAgD,UAAU,CAAC;AAC7EA,sBAAG,MAAC,YAAW;AACfA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACP,CAAA;AAAA,MACH;AAAA,IACD;AAAA,IACD,oBAAoB,UAAO,MAAA;AACzBA,oBAAG,MAAC,MAAM,OAAM,iDAAgD,kBAAkB,OAAO;AAAA,IAC1F;AAAA,IACD,eAAY;AACV,WAAK,YAAY;AAAA,IACnB;AAAA,EACD;AAAA,EACD,UAAU;AAAA,IACR,kBAAkB,IAAA,cAAA;AAAA,MAChB,MAAG;AACD,eAAO,KAAK,wBAAwB,UAAU,KAAK,mBAAmB,KAAK;AAAA,MAC5E;AAAA,MACD,IAAI,QAAK,MAAA;AACP,YAAI,KAAK,wBAAwB,SAAS;AACxC,eAAK,mBAAmB;AAAA,QACxB,OAAK;AACL,eAAK,cAAc;AAAA,QACrB;AACA,aAAK,aAAY;AAAA,MACnB;AAAA,KACF;AAAA,EACF;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACj1BA,GAAG,WAAW,eAAe;"}