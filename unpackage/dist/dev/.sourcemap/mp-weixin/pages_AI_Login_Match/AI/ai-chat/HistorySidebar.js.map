{"version":3,"file":"HistorySidebar.js","sources":["pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue","/Users/ghw/Documents/waibao/yanshilu_ui/pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue?type=component"],"sourcesContent":["<template>\n\t<view class=\"history-sidebar\" :class=\"{visible: visible}\">\n\t\t<view class=\"sidebar-header\">\n\t\t\t<text class=\"sidebar-title\">历史记录</text>\n\t\t</view>\n\t\t<scroll-view class=\"history-list\" scroll-y=\"true\">\n\t\t\t<!-- 今天 -->\n\t\t\t<view v-if=\"groupedHistory.today && groupedHistory.today.length\" class=\"history-group\">\n\t\t\t\t<view class=\"history-group-title\">今天</view>\n\t\t\t\t<view v-for=\"item in groupedHistory.today\" :key=\"item.id\" class=\"history-item-outer\" :class=\"{'active': currentChatId === item.id}\">\n\t\t\t\t\t<view v-if=\"currentChatId === item.id\" class=\"history-item-outer-gradient\" @click=\"loadChatHistory(item.id)\">\n\t\t\t\t\t\t<view class=\"history-item-inner\">\n\t\t\t\t\t\t\t<view class=\"history-item-content\">\n\t\t\t\t\t\t\t\t<text class=\"history-title\">{{item.abstract || item.title}}</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view class=\"history-actions\">\n\t\t\t\t\t\t\t\t<text class=\"mode-badge\" v-if=\"item.chatMode\">{{getModeLabel(item.chatMode)}}</text>\n\t\t\t\t\t\t\t\t<view class=\"history-delete\" @click.stop=\"deleteChatHistory(item.id, $event)\">\n    \t\t\t\t\t\t\t\t<image class=\"delete-icon-img\" src=\"../.././static/AIchat/delate.png\" mode=\"aspectFit\" />\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view v-else class=\"history-item-inner\" @click=\"loadChatHistory(item.id)\">\n\t\t\t\t\t\t<view class=\"history-item-content\">\n\t\t\t\t\t\t\t<text class=\"history-title\">{{item.abstract || item.title}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"history-actions\">\n\t\t\t\t\t\t\t<text class=\"mode-badge\" v-if=\"item.chatMode\">{{getModeLabel(item.chatMode)}}</text>\n\t\t\t\t\t\t\t<view class=\"history-delete\" @click.stop=\"deleteChatHistory(item.id, $event)\">\n    \t\t\t\t\t\t\t<image class=\"delete-icon-img\" src=\"../.././static/AIchat/delate.png\" mode=\"aspectFit\" />\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t<!-- 七天内 -->\n\t\t\t<view v-if=\"groupedHistory.week && groupedHistory.week.length\" class=\"history-group\">\n\t\t\t\t<view class=\"history-group-title\">七天内</view>\n\t\t\t\t<view v-for=\"item in groupedHistory.week\" :key=\"item.id\" class=\"history-item-outer\" :class=\"{'active': currentChatId === item.id}\">\n\t\t\t\t\t<view v-if=\"currentChatId === item.id\" class=\"history-item-outer-gradient\" @click=\"loadChatHistory(item.id)\">\n\t\t\t\t\t\t<view class=\"history-item-inner\">\n\t\t\t\t\t\t\t<view class=\"history-item-content\">\n\t\t\t\t\t\t\t\t<text class=\"history-title\">{{item.abstract || item.title}}</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view class=\"history-actions\">\n\t\t\t\t\t\t\t\t<text class=\"mode-badge\" v-if=\"item.chatMode\">{{getModeLabel(item.chatMode)}}</text>\n\t\t\t\t\t\t\t\t<view class=\"history-delete\" @click.stop=\"deleteChatHistory(item.id, $event)\">\n    \t\t\t\t\t\t\t\t<image class=\"delete-icon-img\" src=\"../.././static/AIchat/delate.png\" mode=\"aspectFit\" />\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view v-else class=\"history-item-inner\" @click=\"loadChatHistory(item.id)\">\n\t\t\t\t\t\t<view class=\"history-item-content\">\n\t\t\t\t\t\t\t<text class=\"history-title\">{{item.abstract || item.title}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"history-actions\">\n\t\t\t\t\t\t\t<text class=\"mode-badge\" v-if=\"item.chatMode\">{{getModeLabel(item.chatMode)}}</text>\n\t\t\t\t\t\t\t<view class=\"history-delete\" @click.stop=\"deleteChatHistory(item.id, $event)\">\n    \t\t\t\t\t\t\t<image class=\"delete-icon-img\" src=\"../.././static/AIchat/delate.png\" mode=\"aspectFit\" />\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t<!-- 30天内 -->\n\t\t\t<view v-if=\"groupedHistory.month && groupedHistory.month.length\" class=\"history-group\">\n\t\t\t\t<view class=\"history-group-title\">30天内</view>\n\t\t\t\t<view v-for=\"item in groupedHistory.month\" :key=\"item.id\" class=\"history-item-outer\" :class=\"{'active': currentChatId === item.id}\">\n\t\t\t\t\t<view v-if=\"currentChatId === item.id\" class=\"history-item-outer-gradient\" @click=\"loadChatHistory(item.id)\">\n\t\t\t\t\t\t<view class=\"history-item-inner\">\n\t\t\t\t\t\t\t<view class=\"history-item-content\">\n\t\t\t\t\t\t\t\t<text class=\"history-title\">{{item.abstract || item.title}}</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view class=\"history-actions\">\n\t\t\t\t\t\t\t\t<text class=\"mode-badge\" v-if=\"item.chatMode\">{{getModeLabel(item.chatMode)}}</text>\n\t\t\t\t\t\t\t\t<view class=\"history-delete\" @click.stop=\"deleteChatHistory(item.id, $event)\">\n    \t\t\t\t\t\t\t\t<image class=\"delete-icon-img\" src=\"../.././static/AIchat/delate.png\" mode=\"aspectFit\" />\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view v-else class=\"history-item-inner\" @click=\"loadChatHistory(item.id)\">\n\t\t\t\t\t\t<view class=\"history-item-content\">\n\t\t\t\t\t\t\t<text class=\"history-title\">{{item.abstract || item.title}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"history-actions\">\n\t\t\t\t\t\t\t<text class=\"mode-badge\" v-if=\"item.chatMode\">{{getModeLabel(item.chatMode)}}</text>\n\t\t\t\t\t\t\t<view class=\"history-delete\" @click.stop=\"deleteChatHistory(item.id, $event)\">\n    \t\t\t\t\t\t\t<image class=\"delete-icon-img\" src=\"../.././static/AIchat/delate.png\" mode=\"aspectFit\" />\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t<!-- 没有历史记录 -->\n\t\t\t<view class=\"empty-history\" v-if=\"!hasAnyHistory\">\n\t\t\t\t<text class=\"empty-history-text\">暂无历史记录</text>\n\t\t\t</view>\n\t\t</scroll-view>\n\t</view>\n</template>\n\n<script lang=\"uts\">\n\timport { mapState, mapActions } from 'vuex';\n\t// 导入时间戳格式化函数\n\timport { formatTimestamp } from '../../../components/timeStamp.js';\n\t\n\t/**\n\t * @description 历史记录侧边栏组件，按时间分组显示\n\t * @property {Boolean} visible - 侧边栏是否可见\n\t * @property {Object} groupedHistory - 按时间分组的历史记录\n\t * @property {String} currentChatId - 当前选中的聊天ID\n\t * @event {Function} loadChat - 加载聊天历史记录\n\t * @event {Function} deleteChat - 删除聊天历史记录\n\t */\n\texport default {\n\t\tname: \"HistorySidebar\",\n\t\tprops: {\n\t\t\tvisible: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\tgroupedHistory: {\n\t\t\t\ttype: Object,\n\t\t\t\tdefault: () => ({ today: [], week: [], month: [] })\n\t\t\t},\n\t\t\tcurrentChatId: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: ''\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\t/**\n\t\t\t * @description 从 Vuex 状态中获取数据\n\t\t\t */\n\t\t\t...mapState({\n\t\t\t\tconversations: state => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn state.user && state.user.aiChat && state.user.aiChat.aiChat \n\t\t\t\t\t\t\t? (state.user.aiChat.aiChat.conversations || []) \n\t\t\t\t\t\t\t: [];\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tuni.__f__('error','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:145','获取 conversations 状态出错:', e);\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tactiveConversation: state => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn state.user && state.user.aiChat && state.user.aiChat.aiChat \n\t\t\t\t\t\t\t? state.user.aiChat.aiChat.activeConversation \n\t\t\t\t\t\t\t: null;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tuni.__f__('error','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:155','获取 activeConversation 状态出错:', e);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\t\n\t\t\t/**\n\t\t\t * @description 按日期分类的历史记录\n\t\t\t * @returns {Object} 分类后的历史记录\n\t\t\t */\n\t\t\tgroupedConversationsByDate() {\n\t\t\t\t// 获取当前日期、一周前日期和一个月前日期的时间戳\n\t\t\t\tconst now = new Date();\n\t\t\t\tconst today = new Date(now.getFullYear(), now.getMonth(), now.getDate()).getTime();\n\t\t\t\tconst weekAgo = today - 7 * 24 * 60 * 60 * 1000;\n\t\t\t\tconst monthAgo = today - 30 * 24 * 60 * 60 * 1000;\n\t\t\t\t\n\t\t\t\t// 分类存储\n\t\t\t\tconst result = {\n\t\t\t\t\ttoday: [],\n\t\t\t\t\tweek: [],\n\t\t\t\t\tmonth: []\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t// 遍历所有对话记录进行分类\n\t\t\t\tthis.conversations.forEach(conv => {\n\t\t\t\t\t// 使用更新时间作为分类依据\n\t\t\t\t\tconst timestamp = conv.updatedAt || conv.createdAt;\n\t\t\t\t\t\n\t\t\t\t\t// 格式化时间戳用于调试\n\t\t\t\t\tconst formattedDate = formatTimestamp(timestamp);\n\t\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:186',`对话 ${conv.id} 的时间: ${formattedDate}, 时间戳: ${timestamp}`);\n\t\t\t\t\t\n\t\t\t\t\tif (timestamp >= today) {\n\t\t\t\t\t\tresult.today.push(conv);\n\t\t\t\t\t} else if (timestamp >= weekAgo) {\n\t\t\t\t\t\tresult.week.push(conv);\n\t\t\t\t\t} else if (timestamp >= monthAgo) {\n\t\t\t\t\t\tresult.month.push(conv);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 按时间戳倒序排序（最新的在前面）\n\t\t\t\t['today', 'week', 'month'].forEach(key => {\n\t\t\t\t\tresult[key].sort((a, b) => {\n\t\t\t\t\t\tconst timeA = a.updatedAt || a.createdAt;\n\t\t\t\t\t\tconst timeB = b.updatedAt || b.createdAt;\n\t\t\t\t\t\treturn timeB - timeA;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * @description 是否有任何历史记录\n\t\t\t * @returns {Boolean}\n\t\t\t */\n\t\t\thasAnyHistory() {\n\t\t\t\tconst g = this.groupedHistory;\n\t\t\t\treturn (g.today && g.today.length) || (g.week && g.week.length) || (g.month && g.month.length);\n\t\t\t}\n\t\t},\n\t\tcreated() {\n\t\t\t// 添加调试信息\n\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:220','=================== 调试信息开始 ===================');\n\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:221','完整的 Vuex store:', this.$store);\n\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:222','Vuex store状态:', this.$store.state);\n\t\t\t\n\t\t\tif (this.$store.state.user) {\n\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:225','user模块状态:', this.$store.state.user);\n\t\t\t\t\n\t\t\t\tif (this.$store.state.user.aiChat) {\n\t\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:228','aiChat模块状态:', this.$store.state.user.aiChat);\n\t\t\t\t\t\n\t\t\t\t\tif (this.$store.state.user.aiChat.aiChat) {\n\t\t\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:231','内层 aiChat:', this.$store.state.user.aiChat.aiChat);\n\t\t\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:232','内层 aiChat conversations:', this.$store.state.user.aiChat.aiChat.conversations);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuni.__f__('error','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:234','无法访问内层 aiChat!');\n\t\t\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:235','aiChat 模块完整内容:', JSON.stringify(this.$store.state.user.aiChat));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tuni.__f__('error','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:238','无法访问 aiChat 模块!');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tuni.__f__('error','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:241','无法访问 user 模块!');\n\t\t\t}\n\t\t\t\n\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:244','组件计算的 conversations:', this.conversations);\n\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:245','组件计算的 historySummaries:', this.historySummaries);\n\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:246','组件计算的 currentChatId:', this.currentChatId);\n\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:247','=================== 调试信息结束 ===================');\n\t\t},\n\t\tmounted() {\n\t\t\t// 在组件挂载时初始化对话分类\n\t\t\tthis.initConversationGroups();\n\t\t},\n\t\tmethods: {\n\t\t\t...mapActions({\n\t\t\t\tsetActiveConversation: 'user/aiChat/setCurrentChat',\n\t\t\t\tdeleteConversation: 'user/aiChat/deleteChat'\n\t\t\t}),\n\t\t\t\n\t\t\t/**\n\t\t\t * @description 初始化对话分组\n\t\t\t */\n\t\t\tinitConversationGroups() {\n\t\t\t\t// 初始化对话分组，将分组结果通过事件发送给父组件\n\t\t\t\tconst groupedConversations = this.groupedConversationsByDate;\n\t\t\t\tthis.$emit('updateGroups', groupedConversations);\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * @description 格式化时间戳为人类可读格式\n\t\t\t * @param {Number} timestamp - 时间戳\n\t\t\t * @param {String} format - 日期格式\n\t\t\t * @returns {String} 格式化后的日期字符串\n\t\t\t */\n\t\t\tformatDate(timestamp, format = 'YYYY-MM-DD') {\n\t\t\t\treturn formatTimestamp(timestamp, format);\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * @description 获取对话模式的中文标签\n\t\t\t * @param {String} mode - 对话模式\n\t\t\t * @returns {String} 对话模式的中文标签\n\t\t\t */\n\t\t\tgetModeLabel(mode) {\n\t\t\t\tconst modeLabels = {\n\t\t\t\t\t'general': '通用',\n\t\t\t\t\t'school': '择校',\n\t\t\t\t\t'career': '职业规划'\n\t\t\t\t};\n\t\t\t\treturn modeLabels[mode] || '通用';\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * @description 加载聊天历史\n\t\t\t * @param {String} chatId - 聊天ID\n\t\t\t */\n\t\t\tloadChatHistory(chatId) {\n\t\t\t\t// 通过 Vuex action 设置当前活跃的对话\n\t\t\t\tthis.setActiveConversation(chatId);\n\t\t\t\t\n\t\t\t\t// 如果需要加载完整对话内容，还可以添加这个 action 调用\n\t\t\t\t// this.$store.dispatch('user/aiChat/loadChat', chatId);\n\t\t\t\t\n\t\t\t\t// 通知父组件\n\t\t\t\tthis.$emit('loadChat', chatId);\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * @description 删除历史记录\n\t\t\t * @param {String} chatId - 聊天ID\n\t\t\t * @param {Event} e - 事件对象，用于阻止冒泡\n\t\t\t */\n\t\t\tdeleteChatHistory(chatId, e) {\n\t\t\t\t// 确保阻止事件冒泡，避免触发点击加载历史记录\n\t\t\t\tif (e) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tuni.__f__('log','at pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue:319','删除历史记录:', chatId);\n\t\t\t\t// 通过 Vuex action 删除对话\n\t\t\t\tthis.deleteConversation(chatId);\n\t\t\t\t// 通知父组件\n\t\t\t\tthis.$emit('deleteChat', chatId);\n\t\t\t},\n\t\t\t\n\n\t\t}\n\t}\n</script>\n\n<style>\n\t.history-sidebar {\n\t\tposition: fixed;\n\t\ttop: 206rpx;\n\t\tleft: 0;\n\t\twidth: 66vw;\n\t\theight: calc(100vh - 88rpx);\n\t\tbackground-color: #ffffff;\n\t\ttransform: translateX(-100%);\n\t\ttransition: transform 0.3s ease;\n\t\tz-index: 2000;\n\t\tbox-shadow: 0 0 20rpx rgba(0, 0, 0, 0.1);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tpadding-left: 32rpx;\n\t\tpadding-right: 32rpx;\n\t}\n\t\n\t.history-sidebar.visible {\n\t\ttransform: translateX(0);\n\t}\n\t\n\t.sidebar-header {\n\t\tpadding: 30rpx 0 30rpx 0;\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start;\n\t\theight: 80rpx;\n\t}\n\t\n\t.sidebar-title {\n\t\tfont-size: 36rpx;\n\t\tcolor: rgba(47, 47, 47, 1);\n\t\tfont-weight: 600;\n\t\tmargin-left: 20rpx;\n\t}\n\t\n\t.history-list {\n\t\tflex: 1;\n\t\theight: calc(100vh - 168rpx);\n\t\tpadding: 0;\n\t\tbackground-color: rgba(255, 255, 255, 1);\n\t}\n\t\n\t.empty-history {\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tpadding: 40rpx 0;\n\t\tcolor: #999;\n\t}\n\t\n\t.empty-history-text {\n\t\tcolor: #999;\n\t\tfont-size: 28rpx;\n\t}\n\t\n\t.history-item-outer {\n\t\twidth: 100%;\n\t\tborder-radius: 16px;\n\t\tmargin-bottom: 2rpx;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.history-item-outer-gradient {\n\t\twidth: 100%;\n\t\tborder-radius: 40rpx;\n\t\tpadding: 2rpx 2rpx;\n\t\tbox-sizing: border-box;\n\t\tbackground: linear-gradient(180deg, rgba(228, 241, 255, 1) 0%, rgba(34, 136, 249, 1) 100%);\n\t}\n\t\n\t.history-item-inner {\n\t\twidth: 100%;\n\t\tborder-radius: 40rpx;\n\t\tbackground: #fff;\n\t\toverflow: hidden;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tposition: relative;\n\t\tpadding: 10rpx 20rpx;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\ttransition: all 0.2s;\n\t}\n\t\n\t.history-item-outer.active .history-item-inner::after{\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: linear-gradient(180deg, rgba(194, 221, 250, 0.1) 11.54%, rgba(34, 136, 249, 0.1) 111.54%);\n\n\t}\n\t\n\t.history-item-content {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\toverflow: hidden;\n\t}\n\t\n\t.history-title {\n\t\tfont-family: PingFang SC;\n\t\tfont-weight: 400;\n\t\tfont-size: 26rpx;\n\t\tline-height: 100%;\n\t\tletter-spacing: -1.1rpx;\n\t\tcolor: rgba(0, 0, 0, 1);\n\t\t/* 单行文本截断 */\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\tmax-width: 80%;\n\t}\n\t\n\t\n\t.history-actions {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t}\n\t\n\t.mode-badge {\n\t\tfont-size: 22rpx;\n\t\tcolor: rgba(34, 136, 249, 0.8);\n\t\tpadding: 6rpx 12rpx;\n\t\tborder-radius: 20rpx;\n\t\tmargin-right: 16rpx;\n\t}\n\t\n\t.history-delete {\n\t\twidth: 28rpx;\n\t\theight: 28rpx;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tborder-radius: 50%;\n\t\tz-index: 1000;\n\t}\n\t\n\t.delete-icon-img {\n\t\twidth: 28rpx;\n\t\theight: 28rpx;\n\t}\n\t.history-group-title {\n\t\tfont-family: PingFang SC;\n\t\tfont-weight: 400;\n\t\tfont-size: 24rpx;\n\t\tline-height: 100%;\n\t\tletter-spacing: -1.1rpx;\n\t\tcolor: #888;\n\t\tfont-weight: bold;\n\t\tpadding: 20rpx 0 10rpx 0;\n\t\tmargin-left: 20rpx;\n\t}\n\t.history-group {\n\t\tpadding-bottom: 40rpx;\n\t}\n</style> ","import Component from '/Users/ghw/Documents/waibao/yanshilu_ui/pages_AI_Login_Match/AI/ai-chat/HistorySidebar.vue'\nwx.createComponent(Component)"],"names":["defineComponent","mapState","uni","formatTimestamp","mapActions"],"mappings":"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"}