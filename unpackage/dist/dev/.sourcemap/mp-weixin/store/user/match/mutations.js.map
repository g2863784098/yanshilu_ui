{"version":3,"file":"mutations.js","sources":["store/user/match/mutations.js"],"sourcesContent":["/**\n * 匹配模块的mutations\n * @module store/user/match/mutations\n */\n\nexport default {\n\n  /**\n   * 设置匹配列表\n   * @param {Object} state - 状态对象\n   * @param {Array} matchList - 匹配列表数组\n   */\n  SET_MATCH_LIST(state, matchList) {\n    state.matchList = matchList\n  },\n\n  /**\n   * 追加匹配列表\n   * @param {Object} state - 状态对象\n   * @param {Array} additionalMatches - 追加的匹配列表数组\n   */\n  APPEND_MATCH_LIST(state, additionalMatches) {\n    state.matchList = [...state.matchList, ...additionalMatches]\n  },\n  \n\n  /**\n   * 下面是对接api函数页码相关的mutations\n   * 设置分页信息\n   * @param {Object} state - 当前模块的state\n   * @param {Object} pagination - 分页信息\n   * @param {number} pagination.currentPage - 当前页码\n   * @param {boolean} pagination.hasMore - 是否还有更多数据\n   */\n  SET_PAGINATION(state, { currentPage, hasMore }) {\n    state.currentPage = currentPage;\n    state.hasMore = hasMore;\n  },\n  \n  /**\n   * 设置老师详细信息\n   * @param {Object} state - 当前模块的state\n   * @param {string} payload.teacherId - 老师ID\n   * @param {Object} payload.detail - 老师详细信息\n   */\n  SET_TEACHER_DETAIL(state, { teacherId, detail }) {\n    // 找到匹配列表中对应的老师\n    const teacherIndex = state.matchList.findIndex(teacher => teacher.id === teacherId);\n    \n    if (teacherIndex !== -1) {\n      // 如果存在，则更新详细信息\n      const updatedTeacher = {\n        ...state.matchList[teacherIndex],\n        selfIntroduction: detail.selfIntroduction || state.matchList[teacherIndex].selfIntroduction,\n        service: detail.service || state.matchList[teacherIndex].service\n      };\n      \n      // 使用Vue.set保证响应式更新\n      state.matchList.splice(teacherIndex, 1, updatedTeacher);\n    }\n  },\n  \n  /**\n   * 设置学校列表筛选\n   * @param {Object} state - 当前模块的state\n   * @param {string} schoolList - 学校名称\n   */\n  SET_SCHOOL_LIST(state, schoolList) {\n    state.schoolList = schoolList;\n  },\n  \n  /**\n   * 设置专业课筛选\n   * @param {Object} state - 当前模块的state\n   * @param {string} professionalList - 专业课名称\n   */\n  SET_PROFESSIONAL_LIST(state, professionalList) {\n    state.professionalList = professionalList;\n  },\n  \n  /**\n   * 设置非专业课筛选\n   * @param {Object} state - 当前模块的state\n   * @param {Object} nonProfessionalList - 非专业课列表\n   * @param {string} nonProfessionalList.math - 数学类型\n   * @param {string} nonProfessionalList.english - 英语类型\n   * @param {string} nonProfessionalList.politics - 政治类型\n   * @param {string} nonProfessionalList.other - 其他类型\n   */\n  SET_NON_PROFESSIONAL_LIST(state, nonProfessionalList) {\n    state.nonProfessionalList = { ...nonProfessionalList };\n  },\n  \n  /**\n   * 设置排序方式\n   * @param {Object} state - 当前模块的state\n   * @param {string} sortMode - 排序方式\n   */\n  SET_SORT_MODE(state, sortMode) {\n    state.sortMode = sortMode;\n  }\n} "],"names":[],"mappings":";AAKA,MAAe,YAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOb,eAAe,OAAO,WAAW;AAC/B,UAAM,YAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,kBAAkB,OAAO,mBAAmB;AAC1C,UAAM,YAAY,CAAC,GAAG,MAAM,WAAW,GAAG,iBAAiB;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWD,eAAe,OAAO,EAAE,aAAa,QAAO,GAAI;AAC9C,UAAM,cAAc;AACpB,UAAM,UAAU;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,mBAAmB,OAAO,EAAE,WAAW,OAAM,GAAI;AAE/C,UAAM,eAAe,MAAM,UAAU,UAAU,aAAW,QAAQ,OAAO,SAAS;AAElF,QAAI,iBAAiB,IAAI;AAEvB,YAAM,iBAAiB;AAAA,QACrB,GAAG,MAAM,UAAU,YAAY;AAAA,QAC/B,kBAAkB,OAAO,oBAAoB,MAAM,UAAU,YAAY,EAAE;AAAA,QAC3E,SAAS,OAAO,WAAW,MAAM,UAAU,YAAY,EAAE;AAAA,MACjE;AAGM,YAAM,UAAU,OAAO,cAAc,GAAG,cAAc;AAAA,IACvD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,gBAAgB,OAAO,YAAY;AACjC,UAAM,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,sBAAsB,OAAO,kBAAkB;AAC7C,UAAM,mBAAmB;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWD,0BAA0B,OAAO,qBAAqB;AACpD,UAAM,sBAAsB,EAAE,GAAG;EAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,cAAc,OAAO,UAAU;AAC7B,UAAM,WAAW;AAAA,EAClB;AACH;;"}