{"version":3,"file":"undergraduate.js","sources":["pages_AI_Login_Match/components/combobox/undergraduate.js"],"sourcesContent":["import Fuse from 'fuse.js'\n\nexport default function createDataModule(dataList) {\n  return {\n    state: {\n      data: dataList,\n      filterKeyword: '',\n      dataFuse: null // 存储 Fuse 实例\n    },\n\n    mutations: {\n      setFilterKeyword(state, keyword) {\n        state.filterKeyword = keyword\n      },\n\n      // 初始化 Fuse 实例\n      initFuse(state) {\n        const dataItems = state.data.map(name => {\n          const shortNames = generateShortNames(name)\n          return {\n            name: name,         // 原数据名\n            short: shortNames,  // 生成的简称组合\n            display: name       // 可显示名（备用）\n          }\n        })\n\n        state.dataFuse = new Fuse(\n          dataItems,\n          {\n            keys: [\n              { name: 'name', weight: 0.7 },   // 正式全名匹配，权重大\n              { name: 'short', weight: 0.3 }   // 简称匹配，权重小\n            ],\n            threshold: 0.6,          // 宽松匹配\n            includeScore: true,\n            shouldSort: true,\n            minMatchCharLength: 1,\n            ignoreLocation: true,\n            findAllMatches: true,\n            distance: 1000,\n            location: 0,\n            includeMatches: true\n          }\n        )\n\n        console.log('数据搜索引擎初始化完成，总数量:', dataItems.length)\n      }\n    },\n\n    getters: {\n      filteredData(state) {\n        if (!state.filterKeyword) {\n          return state.data.slice(0, 30) // 限制初始显示数量（比如前30个）\n        }\n\n        if (!state.dataFuse) {\n          this.mutations.initFuse(state)\n        }\n\n        const keyword = state.filterKeyword.trim()\n\n        const results = state.dataFuse.search(keyword)\n\n        if (results.length > 0) {\n          console.log('搜索关键词:', keyword, '找到结果数:', results.length)\n        }\n\n        return results.map(result => result.item.name)\n      },\n\n      // 获取最佳匹配的数据（用于自动完成）\n      bestMatchedData(state, getters) {\n        if (!state.filterKeyword || !state.dataFuse) return ''\n\n        const results = state.dataFuse.search(state.filterKeyword.trim())\n        return results.length > 0 ? results[0].item.name : ''\n      }\n    },\n\n    actions: {\n      updateFilterKeyword({ commit }, keyword) {\n        commit('setFilterKeyword', keyword)\n      },\n\n      initSearch({ commit }) {\n        commit('initFuse')\n      },\n\n      autoSelectBestMatch({ state, getters }) {\n        return getters.bestMatchedData\n      }\n    }\n  }\n}\n\n/**\n * @description 为名称生成可能的简称组合，用于提高模糊搜索能力\n * @param {String} name - 完整名称\n * @returns {String} - 可能的简称组合（空格分隔）\n */\nfunction generateShortNames(name) {\n  let shortNames = []\n\n  const chineseChars = name.split('').filter(char => /[\\u4e00-\\u9fa5]/.test(char)).join('')\n\n  if (chineseChars.length >= 2) {\n    shortNames.push(chineseChars.substring(0, 2)) // 前两个字\n  }\n\n  if (chineseChars.length >= 3) {\n    shortNames.push(chineseChars.substring(0, 3)) // 前三个字\n    const match = chineseChars.match(/^([\\u4e00-\\u9fa5]{2})([\\u4e00-\\u9fa5]{1,3})/)\n    if (match) {\n      shortNames.push(match[1][0] + match[2]) // 地名+关键词，比如\"北理\"\n    }\n  }\n\n  if (chineseChars.length >= 4 && (name.includes('大学') || name.includes('学院'))) {\n    shortNames.push(chineseChars.substring(2)) // 去掉地名\n  }\n\n  return shortNames.join(' ')\n}\n"],"names":["Fuse","uni"],"mappings":"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"}