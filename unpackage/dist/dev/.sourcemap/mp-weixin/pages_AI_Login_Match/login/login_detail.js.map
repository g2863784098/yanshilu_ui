{"version":3,"file":"login_detail.js","sources":["pages_AI_Login_Match/login/login_detail.vue","pages_AI_Login_Match/login/login_detail.vue?type=page"],"sourcesContent":["<template>\n  <Header :title=\"'登录详情'\" @back=\"handleBack\" class=\"header-container\"/>\n\t<view class=\"background-image\">\n    <image\n        src=\"/static/image/bgPicture/background1.png\"\n        mode=\"aspectFill\" alt=\"背景图\"\n      />\n    </view>\n    <view class=\"background-image\">\n      <image\n        src=\"/static/image/bgPicture/background.png\"\n        mode=\"aspectFill\" alt=\"背景图\"\n      />\n  </view>\n  <view class=\"form-container\">\n          <!-- 表单内容 -->\n    <view class=\"form-card\">\n      <view class=\"reminder-outer\">\n        <view class=\"reminder-inner\">\n          <text class=\"reminder-text\">以下信息为选填项，您可以选择填写您想提供的信息</text>\n        </view>\n      </view>\n      <!-- 普通学校和专业筛选框 - 仅学生显示 -->\n      <template v-if=\"userRole === '学生'\">\n        <!-- School - 使用单输入筛选框 -->\n        <view class=\"form-row\">\n          <view class=\"label-container\">\n            <text class=\"form-label\">就读学校</text>\n            <text class=\"optional-tag\">(选填)</text>\n          </view>\n          <ChoiceSelected\n            class=\"form-select\"\n            componentType=\"undergraduate\"\n            :choiceIndex=\"formData.schoolIndex\"\n            :choiceList=\"schoolList\"\n            defaultText=\"请选择学校\"\n            mode=\"search\"\n            searchPlaceholder=\"输入学校名称\"\n            @onChoiceClick=\"handleSchoolSelect\"\n            @search-input=\"handleSchoolSearch\"\n            ref=\"schoolDropdown\"\n          />\n        </view>\n        \n        <!-- Major - 使用单输入筛选框 -->\n        <view class=\"form-row\">\n          <view class=\"label-container\">\n            <text class=\"form-label\">就读专业</text>\n            <text class=\"optional-tag\">(选填)</text>\n          </view>\n          <ChoiceSelected\n            class=\"form-select\"\n            componentType=\"undergraduate\"\n            :choiceIndex=\"formData.majorIndex\"\n            :choiceList=\"majorList\"\n            defaultText=\"请选择专业\"\n            mode=\"search\"\n            searchPlaceholder=\"输入专业名称\"\n            @onChoiceClick=\"handleMajorSelect\"\n            @search-input=\"handleMajorSearch\"\n            ref=\"majorDropdown\"\n          />\n        </view>\n      </template>\n\n      <!-- Grade -->\n      <view class=\"form-row\">\n        <view class=\"label-container\">\n          <text class=\"form-label\">年级</text>\n          <text class=\"optional-tag\">(选填)</text>\n        </view>\n        <ChoiceSelected\n          class=\"form-select\"\n          :choiceIndex=\"formData.gradeIndex\"\n          :choiceList=\"gradeList\"\n          defaultText=\"请选择年级\"\n          mode=\"select\"\n          @onChoiceClick=\"handleGradeSelect\"\n        />\n      </view>\n      \n      <!-- 目标学校和目标专业筛选框 - 学生和老师都显示，但标签有区别 -->\n      <template>\n          <!-- Target School -->\n          <view class=\"form-row\">\n            <view class=\"label-container\">\n              <text class=\"form-label\">{{ userRole === '学生' ? '目标学校' : '就读学校' }}</text>\n              <text class=\"optional-tag\">(选填)</text>\n            </view>\n            <ChoiceSelected\n              class=\"form-select\"\n              componentType=\"graduateSchool\"\n              :choiceIndex=\"formData.targetSchoolIndex\"\n              :choiceList=\"targetSchoolList\"\n              :defaultText=\"userRole === '学生' ? '请选择目标学校' : '请选择学校'\"\n              mode=\"search\"\n              :searchPlaceholder=\"userRole === '学生' ? '输入目标学校名称' : '输入学校名称'\"\n              @onChoiceClick=\"handleTargetSchoolSelect\"\n              @search-input=\"handleTargetSchoolSearch\"\n              @linkage-change=\"handleSchoolChange\"\n              :enablePagination=\"true\"\n              :pageSize=\"10\"\n              ref=\"targetSchoolDropdown\"\n            />\n          </view>\n          \n          <!-- Target Major -->\n          <view class=\"form-row\">\n            <view class=\"label-container\">\n              <text class=\"form-label\">{{ userRole === '学生' ? '目标专业' : '就读专业' }}</text>\n              <text class=\"optional-tag\">(选填)</text>\n            </view>\n            <ChoiceSelected\n              class=\"form-select\"\n              componentType=\"graduateMajor\"\n              :choiceIndex=\"formData.targetMajorIndex\"\n              :choiceList=\"targetMajorList\"\n              :parentValue=\"formData.targetSchool\"\n              :isLinkage=\"true\"\n              :defaultText=\"formData.targetSchool ? '请选择专业' : '请先选择学校'\"\n              mode=\"search\"\n              :searchPlaceholder=\"!formData.targetSchool ? '请先选择学校' : (userRole === '学生' ? '请选择目标专业' : '请选择专业')\"\n              @onChoiceClick=\"handleTargetMajorSelect\"\n              @search-input=\"handleTargetMajorSearch\"\n              @reset-selection=\"resetMajorSelection\"\n              :enablePagination=\"true\"\n              :pageSize=\"10\"\n              ref=\"targetMajorDropdown\"\n            />\n          </view>\n      </template>\n      <!-- 按钮区域 -->\n      <view class=\"button-container\">\n        <button class=\"skip-btn\" @click=\"skipForm\">\n          <image src=\"../static/login/skip.png\" class=\"skip-btn-icon\"/>\n          <text class=\"btn-text\">跳过</text>\n        </button>\n        <button class=\"submit-btn\" @click=\"submitForm\">\n          <image src=\"../static/login/submit.png\" class=\"submit-btn-icon\"/>\n          <text class=\"btn-text\">提交</text>\n        </button>\n      </view>\n    </view>\n\n    \n    <!-- 老师角色协议确认浮窗 -->\n    <view class=\"modal-overlay\" v-if=\"showAgreementModal\" @click.stop=\"closeModal\">\n      <view class=\"modal-content\" @click.stop>\n        <view class=\"modal-title\">入驻协议</view>\n        <view class=\"modal-body\">\n          <view class=\"agreement-text\">\n            <view class=\"agreement-item\">就平台入驻涉及的权利和义务与您做出如下约定：</view>\n            <view class=\"agreement-item\">1、您知晓并同意，登署本协议即代表您依照本协议公布的规则履行义务并享有权利。</view>\n            <view class=\"agreement-item\">2、您同意，申请入驻平台认证老师后按照平台要求提供服务，包括并不限于向平台用户提供线上线下考研咨询及资料服务。</view>\n            <view class=\"agreement-item\">3、您同意，入驻平台认证学长通过后，进行线上服务时就服务标准内容进行回复，不得向用户索要用户私人联系方式包括(微信、手机号等)，平台会对站内聊天内容进行监控，若发现违规内容，平台有权进行处理，处理方式包括并不限于限制消息发送、删除消息等，若违规行为次数超过2次，平台有权对您的认证状态进行撤销。</view>\n          </view>\n        </view>\n        <view class=\"modal-footer\">\n          <button class=\"agree-btn\" @click=\"confirmAgreement\">我已悉知并同意</button>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script lang=\"uts\">\nimport ChoiceSelected from '/pages_AI_Login_Match/components/combobox/combobox'\nimport { mapState, mapActions, mapGetters, mapMutations } from 'vuex'\nimport { Navigator } from '@/router/Router';\nimport GraduateStore from '/pages_AI_Login_Match/components/combobox/graduate_school_major.js';\nimport createDataModule from '/pages_AI_Login_Match/components/combobox/undergraduate.js';\nimport schoolData from '/pages_AI_Login_Match/static/data/2886所大学.json';\nimport majorData from '/pages_AI_Login_Match/static/data/本科专业.json';\nimport Header from '@/components/navigationTitleBar/header';\n\nexport default {\n  onPageScroll() {\n    // 通知所有组件页面已滚动\n    uni.$emit('page-scroll');\n  },\n  components: {\n    ChoiceSelected,\n    Header\n  },\n  onLoad() {\n    this.loadUniversityData();\n    this.initSchoolAndMajorSearch();\n    // 加载用户信息\n    this.initUserInfo();\n  },\n  data() {\n    return {\n      formData: {\n        nickname: '', // 用户昵称\n        avatar: '/static/image/defaultAvatar/teacher-man.png', // 默认头像\n        schoolIndex: -1,\n        majorIndex: -1,\n        targetSchoolIndex: -1,  // 目标学校索引\n        targetMajorIndex: -1,   // 目标专业索引\n        gradeIndex: -1,\n        targetSchool: '',\n        targetMajor: '', // 目标专业值\n      },\n      schoolList: [], // 普通学校列表\n      majorList: [], // 普通专业列表\n      targetSchoolList: [], // 目标学校列表（考研）\n      targetMajorList: [], // 目标专业列表（考研）\n      allGradeList: ['大一', '大二', '大三', '大四', '研一', '研二', '研三'],\n      showAgreementModal: false, // 控制协议浮窗显示\n      pendingUserInfo: null, // 暂存待提交的用户信息\n      // 分离筛选器状态\n      graduateStore: null, // 研究生数据状态\n      schoolStore: null, // 本科学校数据状态\n      majorStore: null, // 本科专业数据状态\n      token: '', // 用户token\n      userId: '', // 用户ID\n    };\n  },\n  computed: {\n    // 使用mapState映射userInfo相关状态\n    ...mapState('user/baseInfo', {\n      userRole: state => state.userInfo.role,\n      userSchool: state => state.userInfo.school,\n      userMajor: state => state.userInfo.major,\n      userTargetSchool: state => state.userInfo.targetSchool,\n      userTargetMajor: state => state.userInfo.targetMajor,\n      userStudentGrade: state => state.userInfo.studentGrade,\n      userTeacherGrade: state => state.userInfo.teacherGrade,\n    }),\n    \n    /**\n     * 根据用户角色筛选年级列表\n     * @returns {Array} 筛选后的年级列表\n     */\n    gradeList() {\n      if (this.userRole === '老师') {\n        return this.allGradeList.filter(grade => grade.includes('研'));\n      } else {\n        return this.allGradeList.filter(grade => grade.includes('大'));\n      }\n    },\n    /**\n     * @description 获取过滤后的目标学校列表\n     * @returns {Array} 过滤后的目标学校列表\n     */\n    filteredTargetSchoolList() {\n      if (!this.graduateStore) return [];\n      return GraduateStore.getters.filteredSchoolList(this.graduateStore);\n    },\n    \n    /**\n     * @description 获取过滤后的目标专业列表\n     * @returns {Array} 过滤后的目标专业列表\n     */\n    filteredTargetMajorList() {\n      if (!this.graduateStore) return [];\n      return GraduateStore.getters.filteredMajorList(this.graduateStore);\n    },\n\n    /**\n     * @description 获取过滤后的本科学校列表\n     * @returns {Array} 过滤后的本科学校列表\n     */\n    filteredSchoolList() {\n      if (!this.schoolStore) return [];\n      return this.schoolStore.getters.filteredData(this.schoolStore.state);\n    }\n  },\n  methods: {\n    // 使用mapMutations映射UPDATE_USER_INFO方法\n    ...mapMutations('user/baseInfo', ['UPDATE_USER_INFO', 'SET_USER_INFO']),\n    handleBack() {\n      Navigator.toLogin();\n    },\n    /**\n     * @description 初始化用户信息\n     */\n    initUserInfo() {\n      // 获取token和userId\n      this.token = uni.getStorageSync('token') || '';\n      this.userId = uni.getStorageSync('userId') || '';\n      \n      if (!this.token) {\n        // 如果没有token，可能需要重新登录\n        uni.showToast({\n          title: '请先登录',\n          icon: 'none'\n        });\n        return;\n      }\n      \n      // 如果有已存储的用户信息，显示它们\n      const storedNickname = uni.getStorageSync('nickname') || '';\n      const storedAvatar = uni.getStorageSync('avatar') || '';\n      \n      if (storedNickname) {\n        this.formData.nickname = storedNickname;\n      }\n      \n      if (storedAvatar) {\n        this.formData.avatar = storedAvatar;\n      }\n      \n      // 如果需要，可以尝试从后端获取最新的用户信息\n      this.fetchUserProfile();\n    },\n    \n    /**\n     * @description 从后端获取用户信息\n     */\n    fetchUserProfile() {\n      if (!this.token || !this.userId) return;\n      \n      uni.request({\n        url: `http://localhost:8080/users/profile/${this.userId}`,\n        method: 'GET',\n        header: {\n          'Authorization': `Bearer ${this.token}`\n        },\n        success: (res) => {\n          if (res.statusCode === 200 && res.data) {\n            const userData = res.data;\n            \n            // 更新表单数据\n            if (userData.nickname) {\n              this.formData.nickname = userData.nickname;\n              uni.setStorageSync('nickname', userData.nickname);\n            }\n            \n            if (userData.avatar) {\n              this.formData.avatar = userData.avatar;\n              uni.setStorageSync('avatar', userData.avatar);\n            }\n            \n            // 更新Vuex状态\n            this.SET_USER_INFO({\n              id: userData.id || this.userId,\n              name: userData.nickname || this.formData.nickname,\n              avatar: userData.avatar || this.formData.avatar,\n              isRegistered: 1\n            });\n            \n            uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:343','用户信息已更新');\n          }\n        },\n        fail: (err) => {\n          uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:347','获取用户信息失败', err);\n        }\n      });\n    },\n    \n    /**\n     * @description 上传头像\n     */\n    uploadAvatar() {\n      uni.chooseImage({\n        count: 1,\n        sizeType: ['compressed'],\n        sourceType: ['album', 'camera'],\n        success: (res) => {\n          const tempFilePaths = res.tempFilePaths;\n          \n          // 显示加载中\n          uni.showLoading({\n            title: '上传中...'\n          });\n          \n          // 预览选择的图片\n          this.formData.avatar = tempFilePaths[0];\n          \n          // 真实环境中，这里应该调用上传API\n          // 模拟上传完成\n          setTimeout(() => {\n            uni.hideLoading();\n            uni.showToast({\n              title: '头像已更新',\n              icon: 'success'\n            });\n            \n            // 存储到本地以便下次显示\n            uni.setStorageSync('avatar', tempFilePaths[0]);\n          }, 1000);\n        }\n      });\n    },\n    \n    /**\n     * @description 初始化学校和专业搜索引擎\n     */\n    initSchoolAndMajorSearch() {\n      // 初始化本科学校数据状态\n      this.schoolStore = createDataModule(schoolData);\n      \n      // 初始化本科专业数据状态\n      this.majorStore = createDataModule(majorData);\n      \n      // 初始化搜索引擎\n      this.schoolStore.actions.initSearch({\n        commit: (mutation, payload) => {\n          this.schoolStore.mutations[mutation](this.schoolStore.state, payload);\n        }\n      });\n      \n      this.majorStore.actions.initSearch({\n        commit: (mutation, payload) => {\n          this.majorStore.mutations[mutation](this.majorStore.state, payload);\n        }\n      });\n      \n      // 初始填充数据\n      this.schoolList = this.schoolStore.getters.filteredData(this.schoolStore.state);\n      this.majorList = this.majorStore.getters.filteredData(this.majorStore.state);\n    },\n\n    /**\n     * @description 处理学校选择\n     * @param {Number} index - 选择的索引\n     * @param {String} school - 选择的学校名称\n     */\n    handleSchoolSelect(index, school) {\n      this.formData.schoolIndex = index;\n    },\n\n    /**\n     * @description 处理专业选择\n     * @param {Number} index - 选择的索引\n     * @param {String} major - 选择的专业名称\n     */\n    handleMajorSelect(index, major) {\n      this.formData.majorIndex = index;\n    },\n\n    /**\n     * @description 处理目标学校选择 - 级联选择的父项\n     * @param {Number} index - 选择的索引\n     * @param {String} school - 选择的学校名称\n     */\n    handleTargetSchoolSelect(index, school) {\n      this.formData.targetSchoolIndex = index;\n      this.formData.targetSchool = school;\n      \n      // 更新专业列表的依赖值\n      GraduateStore.actions.selectSchool({\n        commit: (mutation, payload) => {\n          GraduateStore.mutations[mutation](this.graduateStore, payload);\n        }\n      }, school);\n      \n      // 重置专业选择\n      this.resetMajorSelection();\n    },\n    /**\n     * @description 处理目标专业选择 - 级联选择的子项\n     * @param {Number} index - 选择的索引\n     * @param {String} major - 选择的专业名称\n     */\n    handleTargetMajorSelect(index, major) {\n      this.formData.targetMajorIndex = index;\n      this.formData.targetMajor = major;\n    },\n    /**\n     * @description 处理年级选择\n     * @param {Number} index - 选择的索引\n     */\n    handleGradeSelect(index) {\n      this.formData.gradeIndex = index;\n    },\n    \n    /**\n     * @description 处理学校搜索输入 - 使用本科学校搜索引擎\n     * @param {String} keyword - 搜索关键词\n     */\n    handleSchoolSearch(keyword) {\n      // 更新学校搜索关键词\n      this.schoolStore.actions.updateFilterKeyword({\n        commit: (mutation, payload) => {\n          this.schoolStore.mutations[mutation](this.schoolStore.state, payload);\n        }\n      }, keyword);\n      \n      // 获取过滤结果\n      this.schoolList = this.schoolStore.getters.filteredData(this.schoolStore.state);\n      \n      // 调试信息\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:485',`学校搜索: \"${keyword}\", 结果数: ${this.schoolList.length}`);\n    },\n    \n    /**\n     * @description 处理专业搜索输入\n     * @param {String} keyword - 搜索关键词\n     */\n    handleMajorSearch(keyword) {\n      // 更新专业搜索关键词\n      this.majorStore.actions.updateFilterKeyword({\n        commit: (mutation, payload) => {\n          this.majorStore.mutations[mutation](this.majorStore.state, payload);\n        }\n      }, keyword);\n      \n      // 获取过滤结果\n      this.majorList = this.majorStore.getters.filteredData(this.majorStore.state);\n      \n      // 调试信息\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:504',`专业搜索: \"${keyword}\", 结果数: ${this.majorList.length}`);\n    },\n    \n    /**\n     * @description 处理目标学校搜索输入 - 使用研究生学校搜索引擎\n     * @param {String} keyword - 搜索关键词\n     */\n    handleTargetSchoolSearch(keyword) {\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:512','处理学校搜索:', keyword);\n      \n      // 特殊处理: 如果关键词为空，显示所有学校（但限制数量）\n      if (!keyword || keyword.trim() === '') {\n        const allSchools = Object.keys(this.graduateStore.schools).slice(0, 50);\n        this.targetSchoolList = allSchools;\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:518','关键词为空，显示前50所学校');\n        return;\n      }\n      \n      // 确保搜索引擎已初始化\n      if (!this.graduateStore.schoolFuse) {\n        uni.__f__('warn','at pages_AI_Login_Match/login/login_detail.vue:524','Fuse搜索引擎未初始化，强制重新初始化中...');\n        // 强制重新初始化搜索引擎，确保搜索质量\n        GraduateStore.actions.reinitializeSearch({\n          commit: (mutation, payload) => {\n            GraduateStore.mutations[mutation](this.graduateStore, payload);\n          },\n          state: this.graduateStore\n        });\n      }\n      \n      // 更新学校搜索关键词\n      GraduateStore.mutations.setSchoolKeyword(this.graduateStore, keyword);\n      \n      // 手动获取过滤结果并更新列表\n      const filteredSchools = GraduateStore.getters.filteredSchoolList(this.graduateStore);\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:539','过滤后的学校列表:', filteredSchools);\n      \n      // 直接更新目标学校列表，不依赖watch\n      this.targetSchoolList = filteredSchools;\n      \n      // 强制刷新组件\n      this.$nextTick(() => {\n        // 记录结果数量\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:547',`最终显示学校数量: ${filteredSchools.length}`);\n        \n        // 确保下拉框组件刷新\n        if (this.$refs.targetSchoolDropdown) {\n          this.$refs.targetSchoolDropdown.$forceUpdate();\n        }\n      });\n    },\n    \n    /**\n     * @description 处理目标专业搜索输入 - 使用研究生专业搜索引擎\n     * @param {String} keyword - 搜索关键词\n     */\n    handleTargetMajorSearch(keyword) {\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:561','处理专业搜索:', keyword);\n      \n      // 确保当前有选中的学校\n      if (!this.graduateStore.selectedSchool) {\n        uni.__f__('warn','at pages_AI_Login_Match/login/login_detail.vue:565','未选择学校，专业搜索无效');\n        return;\n      }\n      \n      // 如果关键词为空，显示所有专业（但限制数量）\n      if (!keyword || keyword.trim() === '') {\n        const allMajors = this.graduateStore.schools[this.graduateStore.selectedSchool] || [];\n        this.targetMajorList = allMajors.slice(0, 20); // 限制初始显示数量\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:573','关键词为空，显示前20个专业');\n        return;\n      }\n      \n      // 确保专业搜索引擎已初始化\n      if (!this.graduateStore.majorFuse) {\n        uni.__f__('warn','at pages_AI_Login_Match/login/login_detail.vue:579','专业搜索引擎未初始化，重新初始化中...');\n        // 重新初始化当前学校的专业搜索引擎\n        GraduateStore.mutations.setSelectedSchool(this.graduateStore, this.graduateStore.selectedSchool);\n      }\n      \n      // 更新专业搜索关键词\n      GraduateStore.mutations.setMajorKeyword(this.graduateStore, keyword);\n      \n      // 手动获取过滤结果并更新列表\n      const filteredMajors = GraduateStore.getters.filteredMajorList(this.graduateStore);\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:589','过滤后的专业列表:', filteredMajors);\n      \n      // 直接更新目标专业列表，不依赖watch\n      this.targetMajorList = filteredMajors;\n      \n      // 强制刷新组件\n      this.$nextTick(() => {\n        // 记录结果数量\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:597',`最终显示专业数量: ${filteredMajors.length}`);\n        \n        // 确保下拉框组件刷新\n        if (this.$refs.targetMajorDropdown) {\n          this.$refs.targetMajorDropdown.$forceUpdate();\n        }\n      });\n    },\n    \n    /**\n     * @description 关闭所有下拉框\n     */\n    closeAllDropdowns() {\n      const dropdowns = ['schoolDropdown', 'majorDropdown', 'targetSchoolDropdown', 'targetMajorDropdown'];\n      dropdowns.forEach(dropdown => {\n        if (this.$refs && this.$refs[dropdown]) {\n          this.$refs[dropdown].closeDropdown && this.$refs[dropdown].closeDropdown();\n        }\n      });\n    },\n    \n    /**\n     * @description 加载大学数据\n     */\n    loadUniversityData() {\n      try {\n        // 初始化考研数据（目标学校和专业）\n        this.initGraduateData(); \n        \n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:626','成功加载学校数据');\n      } catch (error) {\n        uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:628','加载大学数据失败:', error);\n        \n        // 设置默认学校列表\n        const defaultSchools = [\"北京大学\", \"清华大学\", \"复旦大学\"];\n        \n        // 设置普通学校列表（就读学校）\n        this.schoolList = defaultSchools;\n        \n        // 设置目标学校列表（考研学校）\n        this.targetSchoolList = defaultSchools;\n        \n        uni.showToast({\n          title: '加载大学数据失败，使用默认列表',\n          icon: 'none'\n        });\n      }\n    },\n    \n    /**\n     * @description 关闭协议确认浮窗\n     */\n    closeModal() {\n      this.showAgreementModal = false;\n      this.pendingUserInfo = null;\n    },\n    \n    /**\n     * @description 确认同意协议并提交信息\n     */\n    confirmAgreement() {\n      if (this.pendingUserInfo) {\n        // 使用mapMutations映射的方法更新用户信息\n        this.UPDATE_USER_INFO(this.pendingUserInfo);\n        \n        // 提交到后端\n        this.submitToBackend(this.pendingUserInfo);\n        \n        // 本地存储用户昵称和头像，方便下次加载\n        uni.setStorageSync('nickname', this.pendingUserInfo.userInfo.nickname);\n        uni.setStorageSync('avatar', this.pendingUserInfo.userInfo.avatar);\n        \n        // 提示成功\n        uni.showToast({\n          title: '提交成功',\n          icon: 'success'\n        });\n        \n        // 关闭浮窗\n        this.showAgreementModal = false;\n        \n        // 跳转到下一个页面\n        setTimeout(() => {\n          Navigator.toMine();\n        }, 1500);\n      }\n    },\n    skipForm(){\n      Navigator.toIndex();\n    },\n    /**\n     * @description 提交表单信息\n     */\n    submitForm() {\n      try {\n        // 检查必填信息\n        if (!this.formData.nickname.trim()) {\n          uni.showToast({\n            title: '请输入昵称',\n            icon: 'none'\n          });\n          return;\n        }\n        \n        // 从Vuex获取角色，无需本地存储\n        const currentRole = this.userRole;\n        \n        // 构建用户信息对象，与state.js中的结构保持一致\n        const userInfo = {\n          // 顶级字段更新\n          id: this.userId || uni.getStorageSync('userId'), // 保持ID不变\n          name: this.formData.nickname, // 使用昵称更新name字段\n          avatar: this.formData.avatar, // 更新头像\n          isRegistered: 1, // 标记为已注册\n          \n          userInfo: {\n            // 保留证书状态\n            certificate: this.$store.state.user.baseInfo.userInfo.certificate,\n            role: currentRole, // 使用vuex中的角色\n            school: this.formData.schoolIndex >= 0 ? this.schoolList[this.formData.schoolIndex] : this.userSchool,\n            major: this.formData.majorIndex >= 0 ? this.majorList[this.formData.majorIndex] : this.userMajor,\n            studentGrade: (currentRole === '学生' && this.formData.gradeIndex >= 0) ? this.gradeList[this.formData.gradeIndex] : this.userStudentGrade,\n            teacherGrade: (currentRole === '老师' && this.formData.gradeIndex >= 0) ? this.gradeList[this.formData.gradeIndex] : this.userTeacherGrade,\n            // 新增昵称和头像\n            nickname: this.formData.nickname,\n            avatar: this.formData.avatar\n          }\n        };\n        \n        // 如果是学生角色，添加目标学校和目标专业\n        if (currentRole === '学生') {\n          // 使用保存的目标学校和专业值或者保留原有值\n          userInfo.userInfo.targetSchool = this.formData.targetSchool || this.userTargetSchool;\n          userInfo.userInfo.targetMajor = this.formData.targetMajor || this.userTargetMajor;\n        }\n        \n        // 如果是老师角色，显示协议确认浮窗\n        if (currentRole === '老师') {\n          this.pendingUserInfo = userInfo; // 暂存用户信息\n          this.showAgreementModal = true; // 显示协议浮窗\n          return; // 终止后续处理，等待用户确认\n        }\n        \n        // 学生角色直接提交信息，使用mapMutations映射的方法\n        this.UPDATE_USER_INFO(userInfo);\n        \n        // 提交到后端\n        this.submitToBackend(userInfo);\n        \n        // 本地存储用户昵称和头像，方便下次加载\n        uni.setStorageSync('nickname', this.formData.nickname);\n        uni.setStorageSync('avatar', this.formData.avatar);\n        \n        // 提示成功\n        uni.showToast({\n          title: '提交成功',\n          icon: 'success'\n        });\n        \n        // 跳转到下一个页面\n        setTimeout(() => {\n          Navigator.toIndex();\n        }, 1500);\n      } catch (error) {\n        uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:761','提交表单时出错:', error);\n        uni.showToast({\n          title: '提交失败，请重试',\n          icon: 'none'\n        });\n      }\n    },\n    \n    /**\n     * @description 提交用户信息到后端\n     * @param {Object} userInfo - 用户信息对象\n     */\n    submitToBackend(userInfo) {\n      // 确保有token\n      if (!this.token) {\n        uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:776','没有token，无法提交用户信息');\n        return;\n      }\n      \n      // 显示加载中\n      uni.showLoading({\n        title: '提交中...'\n      });\n      \n      // 构造提交的数据\n      const submitData = {\n        id: userInfo.id, // 包含用户ID\n        nickname: userInfo.userInfo.nickname,\n        name: userInfo.name, // 使用顶级name字段\n        avatar: userInfo.avatar, // 使用顶级avatar字段\n        school: userInfo.userInfo.school,\n        major: userInfo.userInfo.major,\n        grade: userInfo.userInfo.role === '学生' ? userInfo.userInfo.studentGrade : userInfo.userInfo.teacherGrade\n      };\n      \n      // 如果是学生，添加目标学校和专业\n      if (userInfo.userInfo.role === '学生') {\n        submitData.targetSchool = userInfo.userInfo.targetSchool;\n        submitData.targetMajor = userInfo.userInfo.targetMajor;\n      }\n      \n      // 发送请求到后端\n      uni.request({\n        url: 'http://localhost:8080/users/profile/update',\n        method: 'POST',\n        header: {\n          'Authorization': `Bearer ${this.token}`,\n          'Content-Type': 'application/json'\n        },\n        data: submitData,\n        success: (res) => {\n          uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:812','用户信息提交成功', res);\n          uni.hideLoading();\n          \n          // 如果后端返回了更新后的用户信息，更新本地存储\n          if (res.data && res.data.user) {\n            const user = res.data.user;\n            \n            // 更新Vuex状态\n            const updateData = {\n              id: user.id || userInfo.id,\n              name: user.name || userInfo.name,\n              avatar: user.avatar || userInfo.avatar\n            };\n            \n            // 更新Vuex\n            this.UPDATE_USER_INFO(updateData);\n            \n            // 更新本地存储\n            uni.setStorageSync('userId', updateData.id);\n            uni.setStorageSync('nickname', updateData.name);\n            uni.setStorageSync('avatar', updateData.avatar);\n          }\n        },\n        fail: (err) => {\n          uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:836','用户信息提交失败', err);\n          uni.hideLoading();\n          uni.showToast({\n            title: '网络异常，信息已本地保存',\n            icon: 'none'\n          });\n        }\n      });\n    },\n\n    /**\n     * @description 验证表单内容 - 所有字段均为选填，无需验证\n     * @returns {boolean} 验证是否通过\n     */\n    validateForm() {\n      // 所有字段均为选填，直接返回true\n      return true;\n    },\n\n    /**\n     * @description 初始化考研数据\n     */\n    initGraduateData() {\n      try {\n        // 初始化研究生数据状态 - 使用深拷贝确保数据完整性\n        this.graduateStore = JSON.parse(JSON.stringify(GraduateStore.state));\n        \n        // 确保数据结构完整\n        if (!this.graduateStore.schools) {\n          uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:865','研究生学校数据不完整');\n          throw new Error('学校数据结构不完整');\n        }\n        \n        // 使用优化的搜索引擎配置初始化\n        GraduateStore.mutations.initSchoolFuse(this.graduateStore);\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:871','Fuse引擎初始化状态:', !!this.graduateStore.schoolFuse);\n        \n        // 验证搜索引擎配置\n        if (this.graduateStore.schoolFuse) {\n          uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:875','Fuse配置验证:', {\n            keys: this.graduateStore.schoolFuse._docs[0] ? Object.keys(this.graduateStore.schoolFuse._docs[0]) : '未知',\n            ignoreLocation: this.graduateStore.schoolFuse.options.ignoreLocation,\n            threshold: this.graduateStore.schoolFuse.options.threshold\n          });\n        } else {\n          uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:881','Fuse.js搜索引擎初始化失败');\n        }\n        \n        // 设置目标学校列表初始值 - 仅用于目标学校下拉框\n        const graduateSchools = Object.keys(this.graduateStore.schools).slice(0, 50); // 初始只显示前50所\n        this.targetSchoolList = graduateSchools;\n        \n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:888','初始化考研数据成功');\n        return true;\n      } catch (error) {\n        uni.__f__('error','at pages_AI_Login_Match/login/login_detail.vue:891','初始化考研数据失败:', error);\n        \n        // 设置默认数据\n        const defaultSchools = [\"北京大学\", \"清华大学\", \"复旦大学\"];\n        this.targetSchoolList = defaultSchools;\n        return false;\n      }\n    },\n    \n    /**\n     * @description 处理学校变更事件\n     * @param {String} school - 变更后的学校名称\n     */\n    handleSchoolChange(school) {\n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:905','学校变更事件:', school);\n      \n      if (!school) {\n        // 学校被清空，重置专业选择\n        this.resetMajorSelection();\n        return;\n      }\n      \n      // 在选择新学校后，立即更新专业搜索实例\n      GraduateStore.actions.selectSchool({\n        commit: (mutation, payload) => {\n          GraduateStore.mutations[mutation](this.graduateStore, payload);\n        }\n      }, school);\n      \n      // 更新目标专业列表\n      if (this.graduateStore.schools[school]) {\n        this.targetMajorList = this.graduateStore.schools[school].slice(0, 30); // 初始显示前30个专业\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:923',`已加载 ${school} 的专业列表，共 ${this.targetMajorList.length} 个`);\n      } else {\n        this.resetMajorSelection();\n        uni.__f__('warn','at pages_AI_Login_Match/login/login_detail.vue:926',`${school} 没有关联的专业数据`);\n      }\n    },\n    \n    /**\n     * @description 重置专业选择\n     */\n    resetMajorSelection() {\n      this.formData.targetMajorIndex = -1;\n      this.formData.targetMajor = '';\n    }\n  },\n  // 监听页面显示时更新搜索引擎\n  onShow() {\n    // 每次显示页面时强制重新初始化搜索引擎，确保搜索功能正常工作\n    if (this.graduateStore) {\n      // 使用强制重新初始化搜索方法\n      GraduateStore.actions.reinitializeSearch({\n        commit: (mutation, payload) => {\n          GraduateStore.mutations[mutation](this.graduateStore, payload);\n        },\n        state: this.graduateStore\n      });\n      \n      uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:950','Fuse引擎强制重新初始化完成，状态:', !!this.graduateStore.schoolFuse);\n      \n      // 验证搜索引擎配置\n      if (this.graduateStore.schoolFuse) {\n        uni.__f__('log','at pages_AI_Login_Match/login/login_detail.vue:954','重新初始化后的Fuse配置:', {\n          threshold: this.graduateStore.schoolFuse.options.threshold,\n          ignoreLocation: this.graduateStore.schoolFuse.options.ignoreLocation,\n          items: this.graduateStore.schoolFuse._docs.length\n        });\n      }\n    }\n    \n    // 重新初始化本科学校和专业搜索引擎\n    if (this.schoolStore && this.majorStore) {\n      this.initSchoolAndMajorSearch();\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.header-container {\n\t/**\n\t * @description 固定顶部导航栏，背景不透明，确保在最上层\n\t */\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\tbackground-color: #fff;\n\tz-index: 100;\n}\n.background-image {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  z-index: 0;\n  pointer-events: none;\n}\n.background-image image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n.reminder-outer {\n  width: 100%;\n  border-radius: 10rpx;\n  padding: 2rpx 2rpx;\n  box-sizing: border-box;\n  background: linear-gradient(180deg, rgba(228, 241, 255, 1) 0%, rgba(34, 136, 249, 1) 100%);\n  margin-bottom: 30rpx;\n}\n\n.reminder-inner {\n  width: 100%;\n  border-radius: 10rpx;\n  background: #fff;\n  overflow: hidden;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  padding: 20rpx 30rpx;\n  align-items: center;\n  justify-content: center;\n}\n\n.reminder-inner::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(180deg, rgba(194, 221, 250, 0.1) 11.54%, rgba(34, 136, 249, 0.1) 111.54%);\n}\n\n.reminder-text {\n  color: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n  position: relative;\n  font-family: PingFang SC;\n  font-weight: 400;\n  font-size: 24rpx;\n  line-height: 100%;\n  letter-spacing: -1.1rpx;\n}\n\n.form-card {\n  background-color: transparent;\n  border-radius: 20rpx;\n  padding: 30rpx;\n}\n\n.label-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 15rpx;\n}\n\n.form-row {\n  margin-bottom: 30rpx;\n}\n\n.form-label {\n  display: block;\n  font-size: 30rpx;\n  font-weight: bold;\n  color: rgba(0, 0, 0, 1);\n  font-family: PingFang SC;\n  font-weight: 400;\n  line-height: 100%;\n  letter-spacing: -1.1rpx;\n\n}\n\n.optional-tag {\n  font-size: 24rpx;\n  color: #999;\n  margin-left: 10rpx;\n}\n\n.required-tag {\n  font-size: 24rpx;\n  color: #ff4d4f;\n  margin-left: 10rpx;\n}\n\n.form-input {\n  width: 100%;\n  height: 80rpx;\n  border: 1px solid #e0e0e0;\n  border-radius: 8rpx;\n  padding: 0 20rpx;\n  font-size: 28rpx;\n  box-sizing: border-box;\n}\n\n.radio-group {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.radio-item-row {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.radio-option {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-right: 30px;\n  margin-left: 30px;\n}\n\n.option-text {\n  margin-left: 8px;\n  font-size: 28rpx;\n  color: #333;\n}\n\n.form-select {\n  width: 100%;\n  border: 2rpx solid rgba(151, 151, 151, 1);\n  border-radius: 8rpx;\n  box-sizing: border-box;\n}\n\n.button-container {\n  margin-top: 50rpx;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n.skip-btn{\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: 200rpx;\n  height: 76rpx;\n  border-radius: 10px;\n  background: linear-gradient(180deg, #B2D7FF 0%, #2288F9 100%);\n}\n.skip-btn-icon{\n  width: 36rpx;\n  height: 36rpx;\n}\n\n.submit-btn-icon{\n  width: 36rpx;\n  height: 36rpx;\n}\n.submit-btn {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: 200rpx;\n  height: 76rpx;\n  border-radius: 10px;\n  background: linear-gradient(180deg, #A5A9F7 0%, rgba(70, 78, 248, 0.9) 100%);\n  margin-left: 80rpx;\n}\n.btn-text{\n  font-family: PingFang SC;\n  font-weight: 400;\n  font-size: 28rpx;\n  line-height: 100%;\n  letter-spacing: -1.1rpx;\n  text-align: center;\n  color:rgba(255, 255, 255, 1);\n  margin-left: 20rpx;\n}\n/* 头像上传相关样式 */\n.avatar-upload-container {\n  position: relative;\n  width: 140rpx;\n  height: 140rpx;\n  border-radius: 50%;\n  overflow: hidden;\n  margin: 10rpx 0;\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);\n}\n\n.form-avatar {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n}\n\n.avatar-upload-mask {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 50rpx;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.upload-text {\n  color: #fff;\n  font-size: 22rpx;\n}\n\n/* 协议浮窗样式 */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 999;\n}\n\n.modal-content {\n  width: 80%;\n  max-height: 70vh;\n  background-color: #fff;\n  border-radius: 20rpx;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.modal-title {\n  text-align: center;\n  font-size: 36rpx;\n  font-weight: bold;\n  padding: 30rpx 0;\n  color: #333;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.modal-body {\n  padding: 30rpx;\n  flex: 1;\n  overflow-y: auto;\n}\n\n.agreement-text {\n  font-size: 28rpx;\n  color: #333;\n  line-height: 1.6;\n}\n\n.agreement-item {\n  margin-bottom: 20rpx;\n}\n\n.modal-footer {\n  padding: 20rpx 30rpx 40rpx;\n  border-top: 1px solid #f0f0f0;\n}\n\n.agree-btn {\n  width: 100%;\n  height: 80rpx;\n  line-height: 80rpx;\n  text-align: center;\n  background-color: #007AFF;\n  color: #fff;\n  font-size: 30rpx;\n  border-radius: 40rpx;\n  border: none;\n}\n</style>","import MiniProgramPage from '/Users/ghw/Documents/waibao/yanshilu_ui/pages_AI_Login_Match/login/login_detail.vue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","uni","mapState","GraduateStore","mapMutations","Navigator","createDataModule","schoolData","majorData"],"mappings":"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"}