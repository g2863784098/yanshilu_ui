{"version":3,"file":"course.js","sources":["pagesMine/course/course.vue","pagesMine/course/course.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <Header  class=\"header-container\" :title=\"'我的课程'\" @back=\"goBack\" />\n    <!-- 学生界面 -->\n    <template v-if=\"userRole === 'student'\">\n      <top-navbar @change=\"onTabChange\" :navHeight=\"60\" :userRole=\"userRole\">\n        <template v-slot:page1>\n          <view class=\"page-content\">\n            <view class=\"selected-date-info\" v-if=\"selectedDate\">\n              <text class=\"date-info-title\">已选择日期：</text>\n              <text class=\"date-info-content\">{{selectedDate}}</text>\n              <button class=\"reset-btn\" @click=\"resetDateSelection\">重选</button>\n            </view>\n            \n            <scroll-view class=\"course-list\" scroll-y>\n              <view v-for=\"(item, index) in pendingCourses\" :key=\"index\" class=\"course-item\">\n                <view class=\"avatar-container\">\n                  <image :src=\"'/static/image/style_for_pages/avatar.png'\" class=\"avatar-image\"></image>\n                </view>\n                <view class=\"course-info\">\n                  <text class=\"course-name\">{{item.name}}</text>\n                  <text class=\"course-teacher\">服务老师：{{item.teacher}}</text>\n                  <text class=\"course-type\">服务类型：一对一课程</text>\n                  <text class=\"course-lessons\">课程节数：2/10</text>\n                  <text v-if=\"item.isTeacherReservation\" class=\"course-time\">老师已选时间：{{item.time}}</text>\n                </view>\n                <button v-if=\"item.isTeacherReservation\" class=\"accept-btn\" @click=\"acceptReservation(index)\">接受预约</button>\n                <button v-else class=\"reserve-btn\" @click=\"handleReserve(index)\">提醒预约</button>\n              </view>\n              <view v-if=\"pendingCourses.length === 0\" class=\"empty-tip\">\n                <text>暂无待预约课程</text>\n              </view>\n            </scroll-view>\n            \n            <!-- 日历选择器（弹出式） -->\n            <uni-calendar \n              ref=\"calendar\"\n              :insert=\"false\"\n              :start-date=\"getToday()\"\n              :end-date=\"getNextMonth()\"\n              @confirm=\"onCalendarConfirm\"\n            />\n          </view>\n        </template>\n        \n        <template v-slot:page2>\n          <!-- 已预约页面 -->\n          <view class=\"page-content\">\n            <scroll-view class=\"course-list\" scroll-y>\n              <view v-for=\"(item, index) in reservedCourses\" :key=\"index\" class=\"course-item\">\n                <view class=\"avatar-container\">\n                  <image :src=\"'/static/image/style_for_pages/avatar.png'\" class=\"avatar-image\"></image>\n                </view>\n                <view class=\"course-info\">\n                  <text class=\"course-name\">{{item.name}}</text>\n                  <text class=\"course-teacher\">服务老师：{{item.teacher}}</text>\n                  <text class=\"course-type\">服务类型：一对一课程</text>\n                  <text class=\"course-lessons\">预约时间：{{item.reservedTime}}</text>\n                </view>\n                <button class=\"modify-time-btn\" @click=\"modifyReservationTime(index)\">修改时间</button>\n              </view>\n              <view v-if=\"reservedCourses.length === 0\" class=\"empty-tip\">\n                <text>暂无已预约课程</text>\n              </view>\n            </scroll-view>\n          </view>\n        </template>\n        \n        <template v-slot:page3>\n          <!-- 已完成页面 -->\n          <view class=\"page-content\">\n            <scroll-view class=\"course-list\" scroll-y>\n              <view v-for=\"(item, index) in completedCourses\" :key=\"index\" class=\"course-item\">\n                <view class=\"avatar-container\">\n                  <image :src=\"'/static/image/style_for_pages/avatar.png'\" class=\"avatar-image\"></image>\n                </view>\n                <view class=\"course-info\">\n                  <text class=\"course-name\">{{item.name}}</text>\n                  <text class=\"course-teacher\">服务老师：{{item.teacher}}</text>\n                  <text class=\"course-type\">服务类型：一对一课程</text>\n                  <text class=\"course-lessons\">完成时间：{{item.completedTime}}</text>\n                  <view class=\"rating\" v-if=\"item.rating\">\n                    <text class=\"rating-text\">评分: </text>\n                    <text class=\"rating-star\" v-for=\"i in 5\" :key=\"i\">\n                      {{i <= item.rating ? '★' : '☆'}}\n                    </text>\n                  </view>\n                </view>\n                <button class=\"view-feedback-btn\" @click=\"viewFeedback(item)\">查看回放</button>\n              </view>\n              <view v-if=\"completedCourses.length === 0\" class=\"empty-tip\">\n                <text>暂无已完成课程</text>\n              </view>\n            </scroll-view>\n          </view>\n        </template>\n      </top-navbar>\n    </template>\n\n    <!-- 老师界面 -->\n    <template v-else>\n      <top-navbar @change=\"onTeacherTabChange\" :navHeight=\"60\" :userRole=\"userRole\">\n        <template v-slot:page1>\n          <view class=\"page-content\">\n            <scroll-view class=\"course-list\" scroll-y>\n              <view v-for=\"(item, index) in teacherPendingCourses\" :key=\"index\" class=\"course-item\">\n                <view class=\"avatar-container\">\n                  <image :src=\"'/static/image/style_for_pages/avatar.png'\" class=\"avatar-image\"></image>\n                </view>\n                <view class=\"course-info\">\n                  <text class=\"course-name\">{{item.name}}</text>\n                  <text class=\"course-teacher\">学生：{{item.studentName || '暂无'}}</text>\n                  <text class=\"course-type\">服务类型：一对一课程</text>\n                  <text class=\"course-lessons\">课程节数：2/10</text>\n                </view>\n                <button class=\"reserve-btn\" @click=\"teacherReserve(index)\">发起预约</button>\n              </view>\n              <view v-if=\"teacherPendingCourses.length === 0\" class=\"empty-tip\">\n                <text>暂无待接受课程</text>\n              </view>\n            </scroll-view>\n            \n            <!-- 老师端日历选择器 -->\n            <uni-calendar \n              ref=\"teacherCalendar\"\n              :insert=\"false\"\n              :start-date=\"getToday()\"\n              :end-date=\"getNextMonth()\"\n              @confirm=\"onTeacherCalendarConfirm\"\n            />\n          </view>\n        </template>\n        \n        <template v-slot:page2>\n          <!-- 老师-进行中课程 -->\n          <view class=\"page-content\">\n            <scroll-view class=\"course-list\" scroll-y>\n              <view v-for=\"(item, index) in teacherActiveCourses\" :key=\"index\" class=\"course-item\">\n                <view class=\"avatar-container\">\n                  <image :src=\"'/static/image/style_for_pages/avatar.png'\" class=\"avatar-image\"></image>\n                </view>\n                <view class=\"course-info\">\n                  <text class=\"course-name\">{{item.name}}</text>\n                  <text class=\"course-teacher\">学生：{{item.studentName || '暂无'}}</text>\n                  <text class=\"course-type\">服务类型：一对一课程</text>\n                  <text class=\"course-lessons\">上课时间：{{item.classTime}}</text>\n                </view>\n                <button class=\"confirm-class-btn\" @click=\"completeClass(index)\">确认下课</button>\n                <button class=\"modify-time-btn\" @click=\"rescheduleClass(index)\">修改时间</button>\n              </view>\n              <view v-if=\"teacherActiveCourses.length === 0\" class=\"empty-tip\">\n                <text>暂无进行中课程</text>\n              </view>\n            </scroll-view>\n          </view>\n        </template>\n        \n        <template v-slot:page3>\n          <!-- 老师-已完成课程 -->\n          <view class=\"page-content\">\n            <scroll-view class=\"course-list\" scroll-y>\n              <view v-for=\"(item, index) in teacherCompletedCourses\" :key=\"index\" class=\"course-item\">\n                <view class=\"avatar-container\">\n                  <image :src=\"'/static/image/style_for_pages/avatar.png'\" class=\"avatar-image\"></image>\n                </view>\n                <view class=\"course-info\">\n                  <text class=\"course-name\">{{item.name}}</text>\n                  <text class=\"course-teacher\">学生：{{item.studentName || '暂无'}}</text>\n                  <text class=\"course-type\">服务类型：一对一课程</text>\n                  <text class=\"course-lessons\">完成时间：{{item.completedTime}}</text>\n                </view>\n                <button class=\"view-feedback-btn\" @click=\"viewClassFeedback(item)\">查看回放</button>\n              </view>\n              <view v-if=\"teacherCompletedCourses.length === 0\" class=\"empty-tip\">\n                <text>暂无已完成课程</text>\n              </view>\n            </scroll-view>\n          </view>\n        </template>\n      </top-navbar>\n    </template>\n  </view>\n</template>\n\n<script lang=\"uts\">\nimport Header from '@/components/navigationTitleBar/header'\n// 导入顶部导航栏组件\nimport topNavbar from '@/components/top-navbar/top-navbar.vue';\n// 导入导航工具\nimport { Navigator } from '@/router/Router.js';\n\nexport default {\n  components: {\n    Header,\n    topNavbar\n  },\n  data() {\n    return {\n      currentTab: 0,\n      teacherCurrentTab: 0,\n      // 更具体的时间段选择\n      timeSlots: [\n        { period: '上午', slots: ['08:00-09:00', '09:00-10:00', '10:00-11:00', '11:00-12:00'] },\n        { period: '下午', slots: ['13:00-14:00', '14:00-15:00', '15:00-16:00', '16:00-17:00'] },\n        { period: '晚上', slots: ['18:00-19:00', '19:00-20:00', '20:00-21:00'] }\n      ],\n      selectedTimeSlot: '',\n      selectedTimePeriod: '',\n      // 待预约课程数据 - 修改为考研相关课程\n      pendingCourses: [\n        {\n          id: 1,\n          name: \"考研政治精讲班\",\n          teacher: \"王老师\",\n          time: \"2023-12-15 14:00\",\n          price: 399,\n          image: \"/static/images/default_avatar.png\",\n          description: \"系统讲解考研政治马原、毛中特、思修法基、当代世界经济与政治重点内容。\"\n        },\n        {\n          id: 2,\n          name: \"考研数学基础班\",\n          teacher: \"李老师\",\n          time: \"2023-12-16 10:00\",\n          price: 499,\n          image: \"/static/images/default_avatar.png\",\n          description: \"覆盖高等数学、线性代数、概率论与数理统计核心知识点，夯实数学基础。\"\n        },\n        {\n          id: 3,\n          name: \"考研英语词汇班\",\n          teacher: \"张老师\",\n          time: \"2023-12-17 15:00\",\n          price: 349,\n          image: \"/static/images/default_avatar.png\",\n          description: \"掌握考研英语必备5500词汇，提高阅读理解和写作能力。\"\n        },\n        {\n          id: 4,\n          name: \"计算机专业课辅导\",\n          teacher: \"陈老师\",\n          time: \"2023-12-18 19:00\",\n          price: 549,\n          image: \"/static/images/default_avatar.png\",\n          description: \"针对计算机专业考生，讲解数据结构、操作系统、计算机网络等核心科目。\"\n        }\n      ],\n      // 已预约课程数据\n      reservedCourses: [\n        {\n          id: 5,\n          name: \"考研专业课强化班\",\n          teacher: \"赵老师\",\n          price: 599,\n          reservedTime: \"2023-12-18 14:00\",\n          image: \"/static/images/default_avatar.png\",\n          description: \"针对专业课考试，深入讲解重点难点，提供真题分析和解题技巧。\"\n        },\n        {\n          id: 6,\n          name: \"考研政治冲刺班\",\n          teacher: \"孙老师\",\n          price: 449,\n          reservedTime: \"2023-12-19 10:00\",\n          image: \"/static/images/default_avatar.png\",\n          description: \"考前政治热点分析，提供答题模板和背诵要点，助力考研政治高分。\"\n        }\n      ],\n      // 已完成课程数据\n      completedCourses: [\n        {\n          id: 7,\n          name: \"考研英语写作班\",\n          teacher: \"黄老师\",\n          price: 399,\n          completedTime: \"2023-12-10 15:00\",\n          image: \"/static/images/default_avatar.png\",\n          replayUrl: \"https://meeting.tencent.com/v2/cloud-record/share?id=5fcc0283-6d70-4b56-8710-5ef9318c475b&from=3\"\n        },\n        {\n          id: 8,\n          name: \"考研复试指导课\",\n          teacher: \"周老师\",\n          price: 499,\n          completedTime: \"2023-12-15 09:00\",\n          image: \"/static/images/default_avatar.png\",\n          replayUrl: \"https://meeting.tencent.com/v2/cloud-record/share?id=7e9f8d62-34a1-4b12-9f80-5c31d9b52ec8&from=3\"\n        }\n      ],\n      currentCourseIndex: null,\n      selectedDate: null,\n      userRole: 'student', // 默认为学生角色\n      userName: '',\n      userData: {},\n      isLoggedIn: false,\n      teacherPendingCourses: [],\n      teacherActiveCourses: [],\n      teacherCompletedCourses: []\n    };\n  },\n  onLoad(options) {\n    uni.__f__('log','at pagesMine/course/course.vue:302','课程页面 onLoad', options);\n    \n    // 初始化页面数据\n    this.loadUserData();\n    \n    // 使用全局状态或传递的参数确定角色\n    const globalData = getApp().globalData;\n    const storedUserRole = uni.getStorageSync('userRole');\n    \n    // 优先使用全局状态中的角色\n    if (globalData && globalData.userRole) {\n      this.userRole = globalData.userRole;\n      uni.__f__('log','at pagesMine/course/course.vue:314','使用全局角色状态:', this.userRole);\n    }\n    // 其次使用存储的角色\n    else if (storedUserRole) {\n      this.userRole = storedUserRole;\n      // 同步到全局状态\n      if (globalData) {\n        globalData.userRole = this.userRole;\n      }\n      uni.__f__('log','at pagesMine/course/course.vue:323','使用存储的角色:', this.userRole);\n    }\n    \n    // 加载对应角色的数据\n    this.loadCourseData();\n  },\n  onShow() {\n    uni.__f__('log','at pagesMine/course/course.vue:330','课程页面 onShow, 当前角色:', this.userRole);\n    \n    // 检查全局状态\n    const globalData = getApp().globalData;\n    if (globalData && globalData.userRole && globalData.userRole !== this.userRole) {\n      uni.__f__('log','at pagesMine/course/course.vue:335','全局角色变更:', globalData.userRole);\n      const previousRole = this.userRole;\n      this.userRole = globalData.userRole;\n      \n      // 如果角色发生变化，重置相关状态并更新存储\n      if (previousRole !== this.userRole) {\n        this.resetRoleRelatedState();\n        uni.setStorageSync('userRole', this.userRole);\n        this.loadCourseData();\n      }\n    }\n    \n    // 如果本地存储的角色与当前不一致，则以本地存储为准\n    const storedUserRole = uni.getStorageSync('userRole');\n    if (storedUserRole && storedUserRole !== this.userRole) {\n      uni.__f__('log','at pagesMine/course/course.vue:350','存储角色与当前不一致, 存储:', storedUserRole, '当前:', this.userRole);\n      const previousRole = this.userRole;\n      this.userRole = storedUserRole;\n      \n      // 同步到全局状态\n      if (globalData) {\n        globalData.userRole = this.userRole;\n      }\n      \n      // 如果角色发生变化，重置相关状态\n      if (previousRole !== this.userRole) {\n        this.resetRoleRelatedState();\n        this.loadCourseData();\n      }\n    }\n  },\n  // 页面卸载时保存状态\n  onUnload() {\n    uni.__f__('log','at pagesMine/course/course.vue:368','课程页面 onUnload, 保存当前角色:', this.userRole);\n    // 确保角色信息被持久化\n    uni.setStorageSync('userRole', this.userRole);\n    \n    // 同步到全局状态\n    const globalData = getApp().globalData;\n    if (globalData) {\n      globalData.userRole = this.userRole;\n    }\n  },\n  methods: {\n    /**\n     * @description 加载用户数据\n     */\n    loadUserData() {\n      // 检查登录状态\n      const token = uni.getStorageSync('token');\n      this.isLoggedIn = !!token;\n      \n      if (this.isLoggedIn) {\n        // 获取用户信息\n        const userInfo = uni.getStorageSync('userInfo');\n        if (userInfo) {\n          try {\n            this.userData = typeof userInfo === 'string' ? JSON.parse(userInfo) : userInfo;\n            this.userName = this.userData.nickname || '用户';\n            \n            // 如果存储中有用户角色，使用存储的角色\n            const previousRole = this.userRole;\n            if (this.userData.role) {\n              // 更新当前角色\n              this.userRole = this.userData.role;\n              uni.__f__('log','at pagesMine/course/course.vue:400','从用户数据中设置角色:', this.userRole);\n              \n              // 同步更新到storage\n              uni.setStorageSync('userRole', this.userData.role);\n              \n              // 同步到全局状态\n              const globalData = getApp().globalData;\n              if (globalData) {\n                globalData.userRole = this.userRole;\n              }\n              \n              // 如果角色发生变化，重置相关状态\n              if (previousRole !== this.userRole) {\n                this.resetRoleRelatedState();\n              }\n            }\n          } catch (e) {\n            uni.__f__('error','at pagesMine/course/course.vue:417','解析用户信息失败:', e);\n          }\n        }\n      } else {\n        this.userData = {};\n        this.userName = '';\n        \n        // 注意：这里不再自动重置为学生角色\n        // 而是保持当前角色不变，避免意外重置\n        uni.__f__('log','at pagesMine/course/course.vue:426','未登录，保持当前角色:', this.userRole);\n      }\n    },\n    \n    // 重置与角色相关的状态\n    resetRoleRelatedState() {\n      uni.__f__('log','at pagesMine/course/course.vue:432','重置角色相关状态');\n      if (this.userRole === 'student') {\n        this.currentTab = 0;\n      } else {\n        this.teacherCurrentTab = 0;\n      }\n      this.selectedDate = null;\n      this.selectedTimeSlot = '';\n      this.selectedTimePeriod = '';\n    },\n    \n    // 处理顶部导航栏组件的标签切换事件 - 学生\n    onTabChange(index) {\n      uni.__f__('log','at pagesMine/course/course.vue:445','学生模式标签切换:', index);\n      this.currentTab = index;\n      \n      // 重置时间选择\n      if (index === 0) {\n        this.selectedTimeSlot = '';\n        this.selectedTimePeriod = '';\n      }\n    },\n    \n    // 重置日期选择\n    resetDateSelection() {\n      this.selectedDate = null;\n      this.selectedTimeSlot = '';\n      this.selectedTimePeriod = '';\n    },\n    \n    // 处理预约 - 修改为显示日历\n    handleReserve(index) {\n      this.currentCourseIndex = index;\n      \n      // 如果已经选择了日期，则显示时间选择弹窗\n      if (this.selectedDate) {\n        this.showTimeSelectionDialog();\n      } else {\n        // 显示日历选择器\n        this.$refs.calendar.open();\n      }\n    },\n    \n    // 日历确认事件\n    onCalendarConfirm(e) {\n      this.selectedDate = e.fulldate;\n      \n      // 选择日期后立即显示时间选择弹窗\n      this.$nextTick(() => {\n        this.showTimeSelectionDialog();\n      });\n    },\n    \n    // 显示时间选择弹窗\n    showTimeSelectionDialog() {\n      // 构建时间段选项\n      const periodOptions = this.timeSlots.map(item => item.period);\n      \n      // 先选择时间段（上午/下午/晚上）\n      uni.showActionSheet({\n        itemList: periodOptions,\n        success: (res) => {\n          this.selectedTimePeriod = periodOptions[res.tapIndex];\n          const selectedPeriod = this.timeSlots[res.tapIndex];\n          \n          // 然后选择具体时间\n          setTimeout(() => {\n            uni.showActionSheet({\n              itemList: selectedPeriod.slots,\n              success: (timeRes) => {\n                this.selectedTimeSlot = selectedPeriod.slots[timeRes.tapIndex];\n                \n                // 选择完时间后显示确认预约弹窗\n                this.confirmReservation();\n              }\n            });\n          }, 300);\n        }\n      });\n    },\n    \n    // 确认预约\n    confirmReservation() {\n      const course = this.pendingCourses[this.currentCourseIndex];\n      \n      // 显示确认弹窗\n      uni.showModal({\n        title: '确认预约',\n        content: `课程：${course.name}\\n日期：${this.selectedDate}\\n时间：${this.selectedTimeSlot}`,\n        success: (res) => {\n          if (res.confirm) {\n            // 将预约成功的课程添加到已预约列表\n            this.reservedCourses.push({\n              ...course,\n              reservedTime: `${this.selectedDate} ${this.selectedTimeSlot}`\n            });\n            \n            // 从待预约列表中删除\n            this.pendingCourses.splice(this.currentCourseIndex, 1);\n            \n            uni.showToast({\n              title: '预约成功',\n              icon: 'success',\n              duration: 2000\n            });\n            \n            // 重置状态\n            this.currentCourseIndex = null;\n            this.selectedDate = null;\n            this.selectedTimeSlot = '';\n            this.selectedTimePeriod = '';\n          }\n        }\n      });\n    },\n    \n    // 完成课程时添加回放链接\n    completeClass(index) {\n      const course = this.teacherActiveCourses[index];\n      \n      // 先让用户输入回放链接\n      uni.showModal({\n        title: '添加课程回放',\n        editable: true,\n        placeholderText: '请输入课程回放链接 (可选)',\n        success: (res) => {\n          let replayUrl = '';\n          if (res.confirm && res.content) {\n            replayUrl = res.content;\n          }\n          \n          // 再确认完成课程\n          uni.showModal({\n            title: '确认下课',\n            content: `确定完成${course.studentName}的${course.name}课程吗？`,\n            success: (confirmRes) => {\n              if (confirmRes.confirm) {\n                // 将课程从进行中移动到已完成\n                this.teacherCompletedCourses.push({\n                  ...course,\n                  completedTime: new Date().toISOString().split('T')[0],\n                  replayUrl: replayUrl\n                });\n                \n                // 从进行中列表中删除\n                this.teacherActiveCourses.splice(index, 1);\n                \n                uni.showToast({\n                  title: '课程已完成',\n                  icon: 'success',\n                  duration: 2000\n                });\n              }\n            }\n          });\n        }\n      });\n    },\n    \n    // 修改预约时间\n    modifyReservationTime(index) {\n      this.currentCourseIndex = index;\n      \n      // 如果已经选择了日期，则显示时间选择弹窗\n      if (this.selectedDate) {\n        this.showTimeSelectionDialog();\n      } else {\n        // 显示日历选择器\n        this.$refs.calendar.open();\n      }\n    },\n    \n    // 查看回访/回放\n    viewFeedback(course) {\n      if (course.replayUrl) {\n        // 如果有回放URL，跳转到回放页面\n        uni.showModal({\n          title: '查看回放',\n          content: '是否跳转到课程回放网页？',\n          success: (res) => {\n            if (res.confirm) {\n              // 跳转到外部链接\n              this.openExternalLink(course.replayUrl);\n            }\n          }\n        });\n      } else {\n        // 默认跳转到评价页面\n        uni.navigateTo({\n          url: `/pages/mine/order/appraise/appraise?courseId=${course.id}&courseName=${course.name}&teacherName=${course.teacher}&price=${course.price}`\n        });\n      }\n    },\n    \n    // 获取今天的日期\n    getToday() {\n      const today = new Date();\n      return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`;\n    },\n    \n    // 获取一个月后的日期（日历结束日期）\n    getNextMonth() {\n      const today = new Date();\n      const nextMonth = new Date(today);\n      nextMonth.setMonth(today.getMonth() + 1);\n      return `${nextMonth.getFullYear()}-${String(nextMonth.getMonth() + 1).padStart(2, '0')}-${String(nextMonth.getDate()).padStart(2, '0')}`;\n    },\n    \n    // 加载课程数据\n    loadCourseData() {\n      // 真实环境中可以从服务器获取数据\n      uni.__f__('log','at pagesMine/course/course.vue:643','加载课程数据，当前角色:', this.userRole);\n      \n      // 根据用户角色加载不同的数据\n      if (this.userRole === 'teacher') {\n        uni.__f__('log','at pagesMine/course/course.vue:647','加载老师课程数据');\n        this.initTeacherData();\n        \n        // 确保使用老师的标签页索引\n        this.teacherCurrentTab = 0;\n      } else {\n        uni.__f__('log','at pagesMine/course/course.vue:653','加载学生课程数据');\n        // 为学生角色初始化数据\n        this.initStudentData();\n        \n        // 确保使用学生的标签页索引\n        this.currentTab = 0;\n      }\n    },\n\n    // 处理老师界面的导航栏切换事件\n    onTeacherTabChange(index) {\n      uni.__f__('log','at pagesMine/course/course.vue:664','老师模式标签切换:', index);\n      this.teacherCurrentTab = index;\n      \n      // 触发必要的数据加载或UI更新\n      if (index === 0) {\n        // 待接受课程\n        uni.__f__('log','at pagesMine/course/course.vue:670','切换到老师-待接受课程标签');\n      } else if (index === 1) {\n        // 进行中课程\n        uni.__f__('log','at pagesMine/course/course.vue:673','切换到老师-进行中课程标签');\n      } else if (index === 2) {\n        // 已完成课程\n        uni.__f__('log','at pagesMine/course/course.vue:676','切换到老师-已完成课程标签');\n      }\n    },\n    \n    // 初始化教师数据\n    initTeacherData() {\n      uni.__f__('log','at pagesMine/course/course.vue:682','初始化教师数据');\n      \n      // 模拟从服务器获取教师相关数据\n      this.teacherPendingCourses = [\n        {\n          id: 101,\n          name: \"考研政治精讲班\",\n          studentName: \"张同学\",\n          price: 399,\n          image: \"/static/images/default_avatar.png\"\n        },\n        {\n          id: 102,\n          name: \"考研数学基础班\",\n          studentName: \"李同学\",\n          price: 499,\n          image: \"/static/images/default_avatar.png\"\n        }\n      ];\n      \n      this.teacherActiveCourses = [\n        {\n          id: 103,\n          name: \"考研英语词汇班\",\n          studentName: \"王同学\",\n          price: 349,\n          classTime: \"2023-12-20 15:00\",\n          image: \"/static/images/default_avatar.png\"\n        }\n      ];\n      \n      this.teacherCompletedCourses = [\n        {\n          id: 104,\n          name: \"计算机专业课辅导\",\n          studentName: \"赵同学\",\n          price: 549,\n          completedTime: \"2023-12-10\",\n          image: \"/static/images/default_avatar.png\",\n          replayUrl: \"https://meeting.tencent.com/v2/cloud-record/share?id=9a0c7f38-5e12-4d1d-a53e-94ed126aa3bb&from=3\"\n        }\n      ];\n    },\n    \n    // 老师端 - 发起预约\n    teacherReserve(index) {\n      this.currentCourseIndex = index;\n      // 显示日历选择器\n      this.$refs.teacherCalendar.open();\n    },\n    \n    // 老师端 - 日历确认事件\n    onTeacherCalendarConfirm(e) {\n      this.selectedDate = e.fulldate;\n      \n      // 选择日期后立即显示时间选择弹窗\n      this.$nextTick(() => {\n        this.showTeacherTimeSelectionDialog();\n      });\n    },\n    \n    // 老师端 - 显示时间选择弹窗\n    showTeacherTimeSelectionDialog() {\n      // 构建时间段选项\n      const periodOptions = this.timeSlots.map(item => item.period);\n      \n      // 先选择时间段（上午/下午/晚上）\n      uni.showActionSheet({\n        itemList: periodOptions,\n        success: (res) => {\n          this.selectedTimePeriod = periodOptions[res.tapIndex];\n          const selectedPeriod = this.timeSlots[res.tapIndex];\n          \n          // 然后选择具体时间\n          setTimeout(() => {\n            uni.showActionSheet({\n              itemList: selectedPeriod.slots,\n              success: (timeRes) => {\n                this.selectedTimeSlot = selectedPeriod.slots[timeRes.tapIndex];\n                \n                // 选择完时间后显示确认预约弹窗\n                this.confirmTeacherReservation();\n              }\n            });\n          }, 300);\n        }\n      });\n    },\n    \n    // 老师端 - 确认预约\n    confirmTeacherReservation() {\n      const course = this.teacherPendingCourses[this.currentCourseIndex];\n      \n      // 显示确认弹窗\n      uni.showModal({\n        title: '确认发起预约',\n        content: `课程：${course.name}\\n学生：${course.studentName}\\n日期：${this.selectedDate}\\n时间：${this.selectedTimeSlot}`,\n        success: (res) => {\n          if (res.confirm) {\n            // 模拟将预约信息发送给学生\n            this.sendReservationToStudent(course);\n            \n            // 从待接受列表中删除\n            this.teacherPendingCourses.splice(this.currentCourseIndex, 1);\n            \n            uni.showToast({\n              title: '预约已发送',\n              icon: 'success',\n              duration: 2000\n            });\n            \n            // 重置状态\n            this.currentCourseIndex = null;\n            this.selectedDate = null;\n            this.selectedTimeSlot = '';\n            this.selectedTimePeriod = '';\n          }\n        }\n      });\n    },\n    \n    // 模拟将预约信息发送给学生\n    sendReservationToStudent(course) {\n      // 真实场景中，这里应该是通过API发送预约信息\n      uni.__f__('log','at pagesMine/course/course.vue:806','发送预约信息到学生:', course.studentName);\n      \n      // 模拟更新全局状态或本地存储\n      const globalData = getApp().globalData || {};\n      if (!globalData.studentReservations) {\n        globalData.studentReservations = [];\n      }\n      \n      // 添加新的预约\n      globalData.studentReservations.push({\n        id: Date.now(),\n        name: course.name,\n        teacher: '我', // 当前登录的老师\n        time: `${this.selectedDate} ${this.selectedTimeSlot}`,\n        price: course.price,\n        image: course.image || \"/static/images/default_avatar.png\",\n        description: `由老师发起的预约：${course.name}`,\n        studentName: course.studentName\n      });\n      \n      // 将课程添加到老师的进行中课程\n      this.teacherActiveCourses.push({\n        ...course,\n        classTime: `${this.selectedDate} ${this.selectedTimeSlot}`\n      });\n    },\n    \n    // 查看回访/回放\n    viewClassFeedback(item) {\n      if (item.replayUrl) {\n        // 如果有回放URL，跳转到回放页面\n        uni.showModal({\n          title: '查看回放',\n          content: '是否跳转到课程回放网页？',\n          success: (res) => {\n            if (res.confirm) {\n              // 跳转到外部链接\n              this.openExternalLink(item.replayUrl);\n            }\n          }\n        });\n      } else {\n        // 默认显示评价内容\n        uni.showModal({\n          title: '学生评价',\n          content: `${item.studentName}对本课程的评价：\\n非常棒的课程，讲解清晰，收获很多！`,\n          showCancel: false\n        });\n      }\n    },\n    \n    // 生成随机未来时间（辅助方法）\n    getRandomFutureTime() {\n      const now = new Date();\n      // 随机1-7天内的某个时间\n      const futureDate = new Date(now.getTime() + (1 + Math.floor(Math.random() * 7)) * 24 * 60 * 60 * 1000);\n      const year = futureDate.getFullYear();\n      const month = String(futureDate.getMonth() + 1).padStart(2, '0');\n      const day = String(futureDate.getDate()).padStart(2, '0');\n      const hours = ['09', '10', '14', '15', '16', '19', '20'][Math.floor(Math.random() * 7)];\n      const minutes = ['00', '30'][Math.floor(Math.random() * 2)];\n      \n      return `${year}-${month}-${day} ${hours}:${minutes}`;\n    },\n    \n    // 通用方法：打开外部链接（兼容多端）\n    openExternalLink(url) {\n      // 根据平台不同使用不同的方式打开外部链接\n\n\n\n\n      \n\n\n\n\n      \n\n      // 小程序环境下使用uni.navigateTo跳转到web-view页面\n      uni.navigateTo({\n        url: `/pages/webview/webview?url=${encodeURIComponent(url)}`\n      });\n\n      \n      // 其他环境\n      uni.__f__('log','at pagesMine/course/course.vue:892','跳转到外部链接:', url);\n    },\n\n    // 确认下课\n    confirmClassEnd(index) {\n      uni.showModal({\n        title: '确认下课',\n        content: '确定要确认下课吗？',\n        success: (res) => {\n          if (res.confirm) {\n            // 将课程状态修改为已完成\n            const completedCourse = this.reservedCourses[index];\n            this.completedCourses.push({\n              ...completedCourse,\n              completedTime: new Date().toISOString().split('T')[0]\n            });\n            \n            // 从已预约列表中删除\n            this.reservedCourses.splice(index, 1);\n            \n            uni.showToast({ \n              title: '已确认下课',\n              icon: 'success',\n              duration: 2000\n            });\n          }\n        }\n      });\n    },\n\n    // 学生数据初始化\n    initStudentData() {\n      uni.__f__('log','at pagesMine/course/course.vue:924','初始化学生数据');\n      \n      // 先加载默认数据\n      // 这里不需要重新初始化pendingCourses，因为已经有默认数据了\n      \n      // 检查全局数据中是否有老师发起的预约\n      const globalData = getApp().globalData || {};\n      if (globalData.studentReservations && globalData.studentReservations.length > 0) {\n        uni.__f__('log','at pagesMine/course/course.vue:932','发现老师发起的预约:', globalData.studentReservations.length);\n        \n        // 将老师发起的预约添加到学生的待预约列表\n        globalData.studentReservations.forEach(reservation => {\n          // 检查是否已存在相同ID的课程，避免重复添加\n          const exists = this.pendingCourses.some(course => course.id === reservation.id);\n          if (!exists) {\n            this.pendingCourses.unshift({\n              id: reservation.id,\n              name: reservation.name,\n              teacher: reservation.teacher,\n              time: reservation.time,\n              price: reservation.price,\n              image: reservation.image,\n              description: reservation.description,\n              isTeacherReservation: true // 标记为老师发起的预约\n            });\n          }\n        });\n        \n        // 处理完后清空全局数据中的预约信息，避免重复显示\n        globalData.studentReservations = [];\n      }\n    },\n\n    // 学生端 - 接受老师发起的预约\n    acceptReservation(index) {\n      const course = this.pendingCourses[index];\n      \n      // 显示确认接受预约的弹窗\n      uni.showModal({\n        title: '接受预约',\n        content: `确认接受${course.teacher}的预约吗？\\n课程：${course.name}\\n时间：${course.time}`,\n        success: (res) => {\n          if (res.confirm) {\n            // 将预约添加到已预约列表\n            this.reservedCourses.push({\n              ...course,\n              reservedTime: course.time\n            });\n            \n            // 从待预约列表中删除\n            this.pendingCourses.splice(index, 1);\n            \n            uni.showToast({\n              title: '已接受预约',\n              icon: 'success',\n              duration: 2000\n            });\n          }\n        }\n      });\n    },\n\n    // 添加返回方法\n    goBack() {\n      // 使用Navigator工具而不是简单的navigateBack\n      Navigator.toMine();\n    },\n\n    // 老师端 - 修改课程时间\n    rescheduleClass(index) {\n      this.currentCourseIndex = index;\n      \n      // 显示日历选择器\n      this.$refs.teacherCalendar.open();\n    },\n  }\n};\n</script>\n\n<style>\n.header-container {\n  width: 100%;\n  height: 200rpx;\n  display: flex;\n  align-items: flex-end;\n  background: linear-gradient(135deg, #f5f9ff, #edf3ff);\n}\n.container {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: linear-gradient(135deg, #f5f9ff, #edf3ff);\n  font-family: \"PingFang SC\", \"Helvetica Neue\", Arial, sans-serif;\n}\n\n.page-content {\n  padding: 10rpx 30rpx;\n}\n\n.course-list {\n  height: calc(100vh - 130rpx);\n  margin-top: 5rpx;\n}\n\n/* 已选择日期信息样式 */\n.selected-date-info {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background-color: #ffffff;\n  margin: 10rpx 0;\n  padding: 20rpx;\n  border-radius: 16rpx;\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\n  border-left: 8rpx solid #3a86ff;\n}\n\n.date-info-title {\n  font-size: 28rpx;\n  color: #666;\n  font-weight: 500;\n}\n\n.date-info-content {\n  font-size: 30rpx;\n  color: #333;\n  font-weight: bold;\n  margin: 0 15rpx;\n}\n\n.reset-btn {\n  margin-left: auto;\n  font-size: 26rpx;\n  background-color: #f0f5ff;\n  color: #3a86ff;\n  border-radius: 30rpx;\n  padding: 10rpx 24rpx;\n  line-height: 1.2;\n  border: 1px solid #d0e1ff;\n}\n\n/* 课程项目样式 */\n.course-item {\n  display: flex;\n  flex-direction: row;\n  border-radius: 16px;\n  margin-bottom: 15px;\n  position: relative;\n  min-height: 160rpx;\n  padding: 0;\n}\n\n.course-item::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 40rpx;\n  padding: 2rpx;\n  background: linear-gradient(180deg, rgba(228, 241, 255, 1) 0%, rgba(34, 136, 249, 1) 100%);\n  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n  -webkit-mask-composite: xor;\n  mask-composite: exclude;\n  pointer-events: none;\n}\n\n.course-item::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: 40rpx;\n  pointer-events: none;\n  background: linear-gradient(180deg, rgba(194, 221, 250, 0.2) 11.54%, rgba(34, 136, 249, 0.2) 111.54%);\n  z-index: 1;\n}\n\n/* 课程信息容器，完全按照service-info样式 */\n.course-item {\n  padding: 25rpx 30rpx;\n  box-sizing: border-box;\n}\n\n.avatar-container {\n  margin-right: 30rpx;\n  position: relative;\n  z-index: 2;\n  flex-shrink: 0;\n  padding: 0;\n  margin-left: 0;\n  border: none;\n}\n\n.avatar-image {\n  width: 160rpx;\n  height: 160rpx;\n  border-radius: 15rpx;\n  background-color: #f0f0f0;\n  overflow: hidden;\n  flex-shrink: 0;\n  box-shadow: 0 6rpx 15rpx rgba(0, 0, 0, 0.1);\n  border: none;\n}\n\n.avatar-circle {\n  width: 160rpx;\n  height: 160rpx;\n  border-radius: 15rpx;\n  background-color: #f0f0f0;\n  overflow: hidden;\n  flex-shrink: 0;\n  box-shadow: 0 6rpx 15rpx rgba(0, 0, 0, 0.1);\n  border: none;\n}\n\n.course-info {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0;\n  padding-left: 15rpx;\n  margin-top: 5rpx;\n  position: relative;\n  z-index: 2;\n}\n\n.course-name {\n  font-family: 'PingFang SC', sans-serif;\n  font-weight: 600;\n  font-size: 27rpx;\n  margin-bottom: 10rpx;\n  color: #333;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  letter-spacing: -0.55px;\n  text-align: left;\n}\n\n.course-teacher, .course-type, .course-lessons, .course-time {\n  font-size: 20rpx;\n  color: #000000;\n  font-weight: 500;\n  font-family: 'PingFang SC', sans-serif;\n  margin-bottom: 4rpx;\n  line-height: 1.2;\n  text-align: left;\n  padding: 2rpx 0;\n}\n\n.price-container, .price-label, .course-price {\n  /* 删除这些样式 */\n  display: none;\n}\n\n.reserve-btn, .view-feedback-btn, .accept-btn, .confirm-class-btn, .modify-time-btn {\n  position: absolute;\n  right: 30rpx;\n  bottom: 20rpx;\n  border-radius: 10rpx;\n  padding: 0 20rpx;\n  height: 50rpx;\n  line-height: 50rpx;\n  font-size: 22rpx;\n  font-weight: 500;\n  background: linear-gradient(to bottom, #A5A9F7, #464EF8);\n  color: white;\n  z-index: 2;\n}\n\n.reserve-btn:active, .view-feedback-btn:active, .accept-btn:active, .confirm-class-btn:active, .modify-time-btn:active {\n  transform: scale(0.95);\n  box-shadow: 0 3rpx 10rpx rgba(122, 95, 190, 0.3);\n}\n\n.course-time {\n  font-size: 26rpx;\n  color: #ff7043;\n  font-weight: 500;\n  margin-top: 4rpx;\n  margin-bottom: 4rpx;\n  line-height: 1.2;\n  text-align: left;\n  padding: 2rpx 0;\n}\n\n.empty-tip {\n  display: flex;\n  justify-content: center;\n  padding: 60rpx 0;\n  color: #8c9db5;\n  font-size: 30rpx;\n  font-weight: 500;\n}\n\n.tab-container {\n  flex-direction: row;\n  height: 60rpx; /* 进一步降低高度 */\n  background-color: #ffffff;\n  border-bottom-width: 1rpx;\n  border-bottom-color: #eeeeee;\n}\n</style>    ","import MiniProgramPage from '/Users/ghw/Documents/waibao/yanshilu_ui/pagesMine/course/course.vue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","uni","Navigator"],"mappings":"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"}