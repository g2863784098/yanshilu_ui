{"version":3,"file":"match_api.js","sources":["store/user/APIroute/match_api/match_api.js"],"sourcesContent":["/**\n * 匹配模块的API接口\n * @module store/user/APIroute/match_api\n */\n\nimport { MATCH_API_BASE_URL, USER_TEACHER_DETAIL_URL } from '../../API.js';\n\n/**\n * 获取匹配的老师列表\n * @param {Object} params - 请求参数\n * @param {string} params.userId - 用户ID\n * @param {string|Array} params.schoolList - 学校列表\n * @param {string|Array} params.professionalList - 专业课列表\n * @param {Object} params.nonProfessionalList - 非专业课列表\n * @param {string} params.sortMode - 排序方式\n * @param {number} params.currentPage - 当前页码\n * @param {number} params.pageSize - 每页数量\n * @returns {Promise} 返回匹配的老师列表\n */\nexport const getMatchTeacherList = (params) => {\n  return new Promise((resolve, reject) => {\n    uni.request({\n      url: MATCH_API_BASE_URL,\n      method: 'POST',\n      data: {\n        userId: params.userId,\n        schoolList: params.schoolList,\n        professionalList: params.professionalList,\n        nonProfessionalList: params.nonProfessionalList,\n        sortMode: params.sortMode,\n        currentPage: params.currentPage,\n        pageSize: params.pageSize\n      },\n      success: (res) => {\n        if (res.statusCode === 200) {\n          resolve(res.data);\n        } else {\n          reject(res);\n        }\n      },\n      fail: (err) => {\n        reject(err);\n      }\n    });\n  });\n};\n\n/**\n * 获取老师详细信息\n * @param {Object} params - 请求参数\n * @param {string} params.userId - 用户ID\n * @param {string} params.teacherId - 老师ID\n * @returns {Promise} 返回老师的详细信息\n */\nexport const getTeacherDetail = (params) => {\n  return new Promise((resolve, reject) => {\n    uni.request({\n      url: USER_TEACHER_DETAIL_URL,\n      method: 'POST',\n      data: {\n        userId: params.userId,\n        teacherId: params.teacherId\n      },\n      success: (res) => {\n        if (res.statusCode === 200) {\n          resolve(res.data);\n        } else {\n          reject(res);\n        }\n      },\n      fail: (err) => {\n        reject(err);\n      }\n    });\n  });\n};\n\n\n"],"names":["uni","MATCH_API_BASE_URL","USER_TEACHER_DETAIL_URL"],"mappings":";;;AAmBY,MAAC,sBAAsB,CAAC,WAAW;AAC7C,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCA,kBAAAA,MAAI,QAAQ;AAAA,MACV,KAAKC,eAAkB;AAAA,MACvB,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ,QAAQ,OAAO;AAAA,QACf,YAAY,OAAO;AAAA,QACnB,kBAAkB,OAAO;AAAA,QACzB,qBAAqB,OAAO;AAAA,QAC5B,UAAU,OAAO;AAAA,QACjB,aAAa,OAAO;AAAA,QACpB,UAAU,OAAO;AAAA,MAClB;AAAA,MACD,SAAS,CAAC,QAAQ;AAChB,YAAI,IAAI,eAAe,KAAK;AAC1B,kBAAQ,IAAI,IAAI;AAAA,QAC1B,OAAe;AACL,iBAAO,GAAG;AAAA,QACX;AAAA,MACF;AAAA,MACD,MAAM,CAAC,QAAQ;AACb,eAAO,GAAG;AAAA,MACX;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;AASY,MAAC,mBAAmB,CAAC,WAAW;AAC1C,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCD,kBAAAA,MAAI,QAAQ;AAAA,MACV,KAAKE,eAAuB;AAAA,MAC5B,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ,QAAQ,OAAO;AAAA,QACf,WAAW,OAAO;AAAA,MACnB;AAAA,MACD,SAAS,CAAC,QAAQ;AAChB,YAAI,IAAI,eAAe,KAAK;AAC1B,kBAAQ,IAAI,IAAI;AAAA,QAC1B,OAAe;AACL,iBAAO,GAAG;AAAA,QACX;AAAA,MACF;AAAA,MACD,MAAM,CAAC,QAAQ;AACb,eAAO,GAAG;AAAA,MACX;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;;;"}